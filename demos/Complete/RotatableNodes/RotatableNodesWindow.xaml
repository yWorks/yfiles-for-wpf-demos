<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Complete.RotatableNodes.RotatableNodesWindow"
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
    Title="Demo.yFiles.Complete.RotatableNodes" Height="500" Width="800" Loaded="OnWindowLoaded" Style="{StaticResource DemoWindow}">
    <HeaderedContentControl Style="{StaticResource DemoStyle}">
        <HeaderedContentControl.Header>
            <RichTextBox BorderThickness="0" IsReadOnly="True">
                <FlowDocument>
                    <Paragraph>
                        This demo shows how support for rotated node visualizations
                        can be implemented on top of the yFiles library.
                        A custom
                        <Run FontStyle="Italic">INodeStyle</Run>
                        implementation is used to encapsulate most of the added
                        functionality.
                    </Paragraph>
                    <Paragraph Style="{StaticResource HtmlH2}">Things to Try</Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>Select a node by clicking it and note the additional rotation handle.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Rotate a node by dragging the rotation handle.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Enable snapping to snap the rotation to the coordinate axis and other rotated nodes. 
                                    You can hold Shift to prevent snapping.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Create edges between nodes. Note that port candidates
                                are rotated with the node, as are ports.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Add a label to a node and rotate the node.
                                Observe how the label rotates with the node.
                                Try moving the label to see how possible label
                                positions are also affected by the node's rotation.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Run a layout. Observe how rotated nodes fit naturally into
                                the computed layout.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Load your own graph and rotated its nodes. 
                                    Note that the contained styles need to be from the library or demos. 
                                    Keep attention when saving this graph because the GraphML output is changed due to the additional rotation style and information.
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </RichTextBox>
        </HeaderedContentControl.Header>
        <DockPanel>
            <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
                <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto">
                    <Button Command="Open" CommandTarget="{Binding ElementName=graphControl}" />
                    <Button Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Separator />
                    <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="Zoom" CommandParameter="1" CommandTarget="{Binding ElementName=graphControl}" ContentTemplate="{StaticResource ImageButtonContentTemplate}" Content="{StaticResource Zoom100Icon}"/>
                    <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Separator />
                    <Button Command="Cut" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="Copy" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="Paste" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="Delete" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Separator />
                    <Button Command="Undo" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="Redo" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Separator />
                    <ToggleButton x:Name="snappingButton" ToolTip="Snapping" Click="SnappingButtonClick" Content="{StaticResource SnappingIcon}" 
                        ContentTemplate="{StaticResource ImageButtonContentTemplate}" />
                    <ToggleButton x:Name="orthogonalEditingButton" ToolTip="Orthogonal Edges" IsChecked="True" Click="OrthogonalEditingButtonClick" Content="{StaticResource OrthogonalEditingIcon}" 
                        ContentTemplate="{StaticResource ImageButtonContentTemplate}" />
                    <Separator/>
                    <Button Command="{x:Static ywpf:GraphCommands.GroupSelection}" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="{x:Static ywpf:GraphCommands.UngroupSelection}" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="{x:Static ywpf:GraphCommands.EnterGroup}" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="{x:Static ywpf:GraphCommands.ExitGroup}" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Separator/>
                    <ComboBox x:Name="graphChooserBox" Width="130" SelectionChanged="GraphChooserBoxSelectedIndexChanged" SelectedIndex="0">
                        <ComboBox.Items>
                            <ComboBoxItem Tag="sine">Sample: Sine Wave</ComboBoxItem>
                            <ComboBoxItem Tag="circle">Sample: Circle</ComboBoxItem>
                        </ComboBox.Items>
                    </ComboBox>
                    <Separator/>
                    <ComboBox x:Name="layoutChooserBox" Width="130" SelectionChanged="LayoutChooserBoxSelectedIndexChanged" SelectedIndex="8">
                        <ComboBox.Items>
                            <ComboBoxItem Tag="hierarchic">Layout: Hierarchic</ComboBoxItem>
                            <ComboBoxItem Tag="organic">Layout: Organic</ComboBoxItem>
                            <ComboBoxItem Tag="orthogonal">Layout: Orthogonal</ComboBoxItem>
                            <ComboBoxItem Tag="circular">Layout: Circular</ComboBoxItem>
                            <ComboBoxItem Tag="tree">Layout: Tree</ComboBoxItem>
                            <ComboBoxItem Tag="balloon">Layout: Balloon</ComboBoxItem>
                            <ComboBoxItem Tag="radial">Layout: Radial</ComboBoxItem>
                            <Separator/>
                            <ComboBoxItem Tag="router-polyline">Routing: Polyline</ComboBoxItem>
                            <ComboBoxItem Tag="router-organic">Routing: Organic</ComboBoxItem>
                        </ComboBox.Items>
                    </ComboBox>
                    <Button Click="OnLayoutClick" Style="{StaticResource BaseToolBarButtonStyle}" >
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{StaticResource LayoutIcon}" Margin="0,0,4,0"/>
                            <TextBlock>Layout</TextBlock>
                        </StackPanel>
                    </Button>
                </ToolBar>
            </ToolBarTray>
             <ywpf:GraphControl Width="Auto" x:Name="graphControl" FileOperationsEnabled="True"/>
        </DockPanel>
     </HeaderedContentControl>
</Window>
