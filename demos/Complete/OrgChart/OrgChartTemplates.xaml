<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:OrgChart="clr-namespace:Demo.yFiles.Graph.OrgChart"
        xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml">

    <!-- Converters -->

    <!-- This converter is used to get an image for an employee. -->
    <OrgChart:NameToImageSourceConverter x:Key="NameToImageSourceConverter"/>
    <OrgChart:StatusToSolidColorBrushConverter x:Key="StatusToColorConverter" />
    <OrgChart:NameToShortNameConverter x:Key="NameToShortNameConverter" />
    <OrgChart:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <!-- Template for the shiny button used for the navigation -->
    <Style x:Key="NavigationButtonStyle"
             TargetType="{x:Type ButtonBase}">
        <Setter Property="Background">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="black"
                              Offset="0" />
                            <GradientStop Color="black"
                              Offset="1" />
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
              Value="white" />
        <Setter Property="Margin"
              Value="1" />
        <Setter Property="Width"
              Value="16" />
        <Setter Property="Height"
              Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Rectangle x:Name="GelBackground"
                         Opacity="1"
                         RadiusX="9"
                         RadiusY="9"
                         Fill="{TemplateBinding  Background}"
                         StrokeThickness="0.35">
                            <Rectangle.Stroke>
                                <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="white"
                                      Offset="0" />
                                            <GradientStop Color="#666666"
                                      Offset="1" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle x:Name="GelShine"
                         Margin="2,2,2,0"
                         VerticalAlignment="top"
                         RadiusX="6"
                         RadiusY="6"
                         Opacity="1"
                         Stroke="transparent"
                         Height="15px">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="0,1">
                                    <GradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#ccffffff"
                                      Offset="0" />
                                            <GradientStop Color="transparent"
                                      Offset="1" />
                                        </GradientStopCollection>
                                    </GradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter x:Name="GelButtonContent"
                                VerticalAlignment="center"
                                HorizontalAlignment="center"
                                Content="{TemplateBinding  Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                       Value="true">
                            <Setter Property="Rectangle.Fill"
                        TargetName="GelBackground">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="lime"
                                        Offset="0" />
                                                <GradientStop Color="DarkGreen"
                                        Offset="1" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                       Value="true">
                            <Setter Property="Rectangle.Fill"
                        TargetName="GelBackground">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="#ffcc00"
                                        Offset="0" />
                                                <GradientStop Color="#cc9900"
                                        Offset="1" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Opacity" TargetName="GelBackground" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="GelBackground" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed"
                 Value="true">
                <Setter Property="Foreground"
                  Value="black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Template for displaying all properties of an employee for the properties view -->
    <DataTemplate x:Key="AllPropertiesTemplate">
        <Grid Name="Grid">
            <Grid.Resources>
                <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                    <Style.Setters>
                        <Setter Property="Foreground"   Value="Black"/>
                        <Setter Property="TextWrapping" Value="NoWrap"/>
                        <Setter Property="Padding"      Value="2,0,2,0"/>
                    </Style.Setters>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!--             left column: property names -->
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0"  Grid.Column="0" Text="Name"/>
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="1"  Grid.Column="0" Text="Position"/>
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="2"  Grid.Column="0" Text="Phone"/>
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="3"  Grid.Column="0" Text="Fax"/>
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="4"  Grid.Column="0" Text="Email"/>
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="5"  Grid.Column="0" Text="Business Unit"/>
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="6"  Grid.Column="0" Text="Status"/>

            <!--             right colum: property values -->
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="0"  Grid.Column="1" Text="{Binding XPath=@name}"        />
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="1"  Grid.Column="1" Text="{Binding XPath=@position}"    />
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="2"  Grid.Column="1" Text="{Binding XPath=@phone}"       />
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="3"  Grid.Column="1" Text="{Binding XPath=@fax}"         />
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="4"  Grid.Column="1" Text="{Binding XPath=@email}"       />
            <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="5"  Grid.Column="1" Text="{Binding XPath=@businessUnit}"/>
            <StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal">
                <Rectangle x:Name="StatusIndicator" Grid.Column="0" RadiusX="8" RadiusY="8" Width="8" Height="8" Margin="0,0,5,0"
                           VerticalAlignment="Center" Fill="{Binding XPath=@status, Converter={StaticResource StatusToColorConverter}}"/>
                <TextBlock Style="{StaticResource TextBlockStyle}" Grid.Row="6"  Grid.Column="1" Text="{Binding XPath=@status}"/>
            </StackPanel>

        </Grid>
    </DataTemplate>

    <!-- Template for displaying only the main properties of an employee for tooltips -->
    <DataTemplate x:Key="MainPropertiesTemplate">
        <Grid Name="Grid">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Style.Setters>
                        <Setter Property="Foreground"          Value="Black"/>
                        <Setter Property="TextWrapping"        Value="NoWrap"/>
                        <Setter Property="Width"               Value="Auto"/>
                        <Setter Property="Height"              Value="Auto"/>
                        <Setter Property="Padding"             Value="2,0,2,0"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style.Setters>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding XPath=@name}" FontWeight="Bold"/>
            <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding XPath=@position}"/>
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Status"/>
            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding XPath=@status}"/>
        </Grid>
    </DataTemplate>

    <!-- Template for displaying an employee in just one text line for the structure view -->
    <HierarchicalDataTemplate x:Key="OneLinePropertiesTemplate" ItemsSource="{Binding XPath=employee}">
        <Grid Name="Grid">
            <Grid.ToolTip>
                <ContentPresenter ContentTemplate="{StaticResource AllPropertiesTemplate}"/>
            </Grid.ToolTip>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Style.Setters>
                        <Setter Property="Foreground"   Value="Black"/>
                        <Setter Property="TextWrapping" Value="NoWrap"/>
                        <Setter Property="Padding"      Value="2,0,2,0"/>
                    </Style.Setters>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="StatusIndicator" Grid.Column="0" RadiusX="8" RadiusY="8" Width="8" Height="8" Margin="0,0,5,0"
                       VerticalAlignment="Center" Fill="{Binding XPath=@status, Converter={StaticResource StatusToColorConverter}}"/>
            <TextBlock Grid.Column="1" Text="{Binding XPath=@name}" />
        </Grid>
    </HierarchicalDataTemplate>

    <!-- data template for an employee node at the detail zoom level -->
    <!-- An image is displayed together with text for the name, position, email, phone and fax attributes. -->
    <!-- Additionally there is a little graphic for displaying the color-coded status of an employee. -->
    <DataTemplate x:Key="DetailNodeStyleTemplate">
        <Grid x:Name="Grid" ShowGridLines="False">
            <Grid.ToolTip>
                <ContentPresenter ContentTemplate="{StaticResource AllPropertiesTemplate}" />
            </Grid.ToolTip>
            <Grid.Resources>
                <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                    <Setter Property="Foreground"          Value="Black"/>
                    <Setter Property="TextWrapping" Value="NoWrap"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="3,0,3,0"/>
                    <Setter Property="Grid.Column" Value="1"/>
                    <Setter Property="Grid.ColumnSpan" Value="1"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="32"/>
                <ColumnDefinition Width="0.1*"/>
            </Grid.ColumnDefinitions>

            <!-- left column: image -->
            <Image Margin="3"  Grid.Column="0" Grid.Row="0" Grid.RowSpan="5" Name="Picture" Width="Auto" Height="Auto" Stretch="Uniform" 
                                                        Source="{Binding XPath=@icon, Converter={StaticResource NameToImageSourceConverter}}" />

            <!-- lower part of right coloumn: status indicator graphic -->
            <Canvas Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="5" HorizontalAlignment="Right" VerticalAlignment="Top" Width="24" Height="24">
                <Ellipse Name="OuterStatusIndicator" Width="24" Height="24" Stroke="{Binding XPath=@status, Converter={StaticResource StatusToColorConverter}}" StrokeThickness="3"/>
                <Ellipse Canvas.Top="3" Canvas.Left="3" Width="18" Height="18" Fill="White"/>
                <Ellipse Name="InnerStatusIndicator" Canvas.Top="6" Canvas.Left="6" Width="12" Height="12" Fill="{Binding XPath=@status, Converter={StaticResource StatusToColorConverter}}" />
            </Canvas>

            <!-- middle/right column: textual information -->
            <TextBlock Grid.Row="0" Style="{StaticResource TextBlockStyle}" Text="{Binding XPath=@name}" />
            <TextBlock Grid.Row="1" Style="{StaticResource TextBlockStyle}" FontSize="8" Text="{Binding XPath=@position}"/>
            <TextBlock Grid.Row="2" Style="{StaticResource TextBlockStyle}" Text="{Binding XPath=@email}"/>
            <TextBlock Grid.Row="3" Style="{StaticResource TextBlockStyle}" Text="{Binding XPath=@phone}" />
            <TextBlock Grid.Row="4" Style="{StaticResource TextBlockStyle}" Text="{Binding XPath=@fax}" />

        </Grid>
    </DataTemplate>

    <!-- data template for an employee node at the intermediate zoom level. -->
    <!-- Just the name and a color-coded status indicator graphic are displayed. -->
    <DataTemplate x:Key="IntermediateNodeStyleTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid.ToolTip>
                <ContentPresenter ContentTemplate="{StaticResource MainPropertiesTemplate}" />
            </Grid.ToolTip>
            <Rectangle Grid.Row="0" Name="StatusIndicator" RadiusX="5" RadiusY="5" Width="28" Height="28" Fill="{Binding XPath=@status, Converter={StaticResource StatusToColorConverter}}" Margin="0" VerticalAlignment="Top"/>
            <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"
                           Text="{Binding XPath=@name}" FontSize="28" />

        </Grid>

    </DataTemplate>

    <!-- data template for an employee node at the overview zoom level. -->
    <!-- Just the abbreviated name and a color-coded status indicator graphic are displayed. -->
    <DataTemplate x:Key="OverviewNodeStyleTemplate">
        <Grid x:Name="Panel">
            <Grid.ToolTip>
                <ContentPresenter ContentTemplate="{StaticResource MainPropertiesTemplate}" />
            </Grid.ToolTip>
            <Polygon
                    Points="40,0 60,0,0,40 0,20"
                    Fill="{Binding XPath=@status, Converter={StaticResource StatusToColorConverter}}">

            </Polygon>

            <TextBlock x:Name="OverviewTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Black"
                               Text="{Binding XPath=@name, Converter={StaticResource NameToShortNameConverter}}" FontSize="30" />
        </Grid>
    </DataTemplate>


    <OrgChart:ZoomToTemplateConverter x:Key="ZoomConverter" 
                                                    DetailThreshold="0.7"
                                                    OverviewThreshold="0.4"
                                                    DetailTemplate="{StaticResource DetailNodeStyleTemplate}" 
                                                    OverviewTemplate="{StaticResource OverviewNodeStyleTemplate}"
                                                    NormalTemplate="{StaticResource IntermediateNodeStyleTemplate}"
                                                    >
    </OrgChart:ZoomToTemplateConverter>

    <!-- The main node style template switches the visual appearance of the employee nodes with -->
    <!-- respect to the focused state by delegating to one of the templates defined above. -->
    <Style x:Key="EmployeeNodeControlStyle" TargetType="ywpf:NodeControl">
            <Setter Property="MinWidth" Value="250"/>
            <Setter Property="MinHeight" Value="100"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ywpf:NodeControl">
                    <Border x:Name="border" BorderThickness="3" CornerRadius="8" >
                        <Border.BorderBrush>
                                <SolidColorBrush x:Name="Borderbrush"  Color="#249AE7" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <!-- blue gradient for the background of the node -->
                                <LinearGradientBrush x:Name="gradient" EndPoint="0.5,1" StartPoint="0.5,0" Opacity="1.0">
                                    <GradientStop x:Name="BackgroundColor1" Color="#CCFFFF" Offset="0"/>
                                    <GradientStop x:Name="BackgroundColor2" Color="#249AE7" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <!-- Contents of the node using one of the data templates above, default OverviewNodeStyleTemplate -->
                                <ContentPresenter Name="Presenter" ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Canvas.Zoom, Converter={StaticResource ZoomConverter}}"/>
                                <StackPanel x:Name="Buttons" VerticalAlignment="Bottom" HorizontalAlignment="Right" Visibility="Collapsed">
                                    <Button x:Name="ShowParentButton" ToolTip="Show Parent" Style="{StaticResource NavigationButtonStyle}" 
                            Visibility="{Binding ElementName=ShowParentButton, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                            Content="&#8743;" 
                            CommandParameter="{TemplateBinding Item}"
                            Command="OrgChart:OrgChartWindow.ShowParentCommand"/>
                                    <Button x:Name="HideParentButton" ToolTip="Hide Parent" Style="{StaticResource NavigationButtonStyle}" 
                            Visibility="{Binding ElementName=HideParentButton, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                            Content="&#8744;" 
                            Command="OrgChart:OrgChartWindow.HideParentCommand"
                            CommandParameter="{TemplateBinding Item}"/>
                                    <StackPanel Orientation="Horizontal">
                                        <Button x:Name="ShowChildrenButton" ToolTip="Show Children" Style="{StaticResource NavigationButtonStyle}" 
                                Visibility="{Binding ElementName=ShowChildrenButton, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                Content="+" 
                                Command="OrgChart:OrgChartWindow.ShowChildrenCommand"
                                CommandParameter="{TemplateBinding Item}"/>
                                        <Button x:Name="HideChildrenButton" ToolTip="Hide Children"  Style="{StaticResource NavigationButtonStyle}"  
                                Visibility="{Binding ElementName=HideChildrenButton, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                Content="-" 
                                Command="OrgChart:OrgChartWindow.HideChildrenCommand"
                                CommandParameter="{TemplateBinding Item}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Opacity" To="0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard >
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="border" Storyboard.TargetProperty="Background.Opacity" />
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Buttons"  Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ItemFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard >
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="BackgroundColor1" Storyboard.TargetProperty="Color" To="White"/>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="BackgroundColor2" Storyboard.TargetProperty="Color" To="Orange"/>
                                            <ColorAnimation Duration="0:0:0.15" Storyboard.TargetName="Borderbrush" Storyboard.TargetProperty="Color" To="Orange"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard >
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="BackgroundColor1" Storyboard.TargetProperty="Color"/>
                                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="BackgroundColor2" Storyboard.TargetProperty="Color"/>
                                            <ColorAnimation Duration="0:0:0.3" Storyboard.TargetName="Borderbrush" Storyboard.TargetProperty="Color"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

</ResourceDictionary>