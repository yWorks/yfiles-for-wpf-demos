<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.5.                           -->
<!-- Copyright (c) 2000-2022 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.ImageExport.ImageExportWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml" 
        xmlns:option="http://www.yworks.com/yfilesWPF/3.0/demos/optionhandler"
        Title="Demo.yFiles.ImageExport" Height="523" Width="908" Loaded="OnLoaded" Style="{StaticResource DemoWindow}">
    <Window.Resources>
        <option:XamlLocalizingConverter x:Key="ItemNameLocalizer"/>
        <Style x:Key="AccordionItemStyle" TargetType="Expander">
            <Setter Property="Margin" Value="0,0,0,2"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="IsExpanded" Value="true"/>
            <Setter Property="HeaderTemplate" Value="{StaticResource AccordionHeaderContentTemplate}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="HeaderSite" Padding="0" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid Margin="{TemplateBinding Padding}" Background="Transparent">
                                            <Border x:Name="background" Background="{StaticResource SecondaryBrush}">
                                                <Grid>
                                                    <Grid Background="Transparent">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" x:Name="cd0"/>
                                                            <ColumnDefinition Width="Auto" x:Name="cd1"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" x:Name="rd0"/>
                                                            <RowDefinition Height="Auto" x:Name="rd1"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid Height="19" HorizontalAlignment="Center" x:Name="icon" VerticalAlignment="Center" Width="19" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="0">
                                                            <Grid.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform Angle="-90"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Grid.RenderTransform>
                                                            <Path 
                                            Height="Auto" 
                                            HorizontalAlignment="Center" 
                                            Margin="0,0,0,0" x:Name="arrow" 
                                            VerticalAlignment="Center" 
                                            Width="Auto" 
                                            RenderTransformOrigin="0.5,0.5" 
                                            Stroke="#666" 
                                            StrokeThickness="2" 
                                            Data="M 1,1.5 L 4.5,5 L 8,1.5">
                                                                <Path.RenderTransform>
                                                                    <TransformGroup>
                                                                        <ScaleTransform/>
                                                                        <SkewTransform/>
                                                                        <RotateTransform Angle="90"/>
                                                                        <TranslateTransform/>
                                                                    </TransformGroup>
                                                                </Path.RenderTransform>
                                                            </Path>
                                                        </Grid>
                                                        <ContentControl Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" Stroke="DarkGray" StrokeThickness="1"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter TargetName="FocusVisualElement" Property="Visibility" Value="Visible" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="false" >
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="-180"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="-90"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentControl x:Name="ExpandSite" Visibility="Collapsed" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionGroupPresenter" TargetType="option:OptionItemPresenter">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="option:OptionItemPresenter">
                        <ItemsControl ItemsSource="{TemplateBinding ChildItems}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Expander Style="{StaticResource AccordionItemStyle}" ExpandDirection="Down" Header="{Binding Converter={StaticResource ItemNameLocalizer}, Mode=OneWay}" Content="{Binding}" IsExpanded="true" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                        <Expander.ContentTemplate>
                                            <DataTemplate>
                                                <option:OptionItemPresenter Item="{Binding}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"/>
                                            </DataTemplate>
                                        </Expander.ContentTemplate>
                                    </Expander>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
        <HeaderedContentControl Style="{StaticResource DemoStyle}">
		<HeaderedContentControl.Header>
			<RichTextBox BorderThickness="0" IsReadOnly="True">
				<FlowDocument>
					<Paragraph>
						<Run>
							Shows the export capabilities of the yFiles controls, namely
							export to the bitmap formats PNG, JPEG, GIF, TIFF and BMP as well as export to the 
							vector graphics format XPS.
						</Run>
					</Paragraph>
					<Paragraph Style="{StaticResource HtmlH2}">
						Things to Try
					</Paragraph>
					<List>
						<ListItem>
							<Paragraph>
								Resize and move the clipping rectangle to control the exported region.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
                                See a preview of the exported image in the 'Export Preview' tab. 
                                Note that you can pan and zoom in this preview.
                            </Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								Uncheck 'Hide Decorations' to export the selection and clipping rectangle visualizations as well as other present adorners.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								Uncheck 'Export Rectangle Contents' to ignore the clipping rectangle and export the contents of the whole viewport.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								Test the outcome of the other settings of the option panel.
							</Paragraph>
						</ListItem>
					</List>
				</FlowDocument>
			</RichTextBox>
		</HeaderedContentControl.Header>
		<DockPanel>
			<ToolBarTray DockPanel.Dock="Top">
				<ToolBar>
					<Button Name="exportPreviewButton" Content="Export Preview" Click="exportButton_Click" />
					<Separator />
					<Button Name="exportToFileButton" Content="Export To File" Click="exportToFileButton_Click" />
					<Separator />
					<Button Name="copyToClipboardButton" Click="copyToClipboardButton_Click" Style="{StaticResource ImageButtonStyle}" ToolTip="Copy to Clipboard"
						Content="{StaticResource CopyIcon}" />
					<Separator />
					<Button Command="IncreaseZoom" />
					<Button Command="DecreaseZoom" />
					<Button Command="Zoom" CommandParameter="1" CommandTarget="{Binding ElementName=graphControl}" Content="{StaticResource Zoom100Icon}" 
						ToolTip="Zoom to 100%" ContentTemplate="{StaticResource ImageButtonContentTemplate}"/>
					<Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}" />
				</ToolBar>
			</ToolBarTray>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="200" />
					<ColumnDefinition Width="5" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<DockPanel Grid.Column="0" Width="Auto">
                    <HeaderedContentControl Header="Export Settings" DockPanel.Dock="Top" Style="{StaticResource HeaderedContentStyle}" BorderThickness="1,0,1,1">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <option:EditorControl x:Name="editorControl">
                                <option:EditorControl.Resources>
                                    <Style x:Key="OptionGroup.Level1.OptionItemPresenter" TargetType="option:OptionItemPresenter" BasedOn="{StaticResource OptionGroupPresenter}" />
                                </option:EditorControl.Resources>
                            </option:EditorControl>
                        </ScrollViewer>
                    </HeaderedContentControl>
                </DockPanel>
				<GridSplitter Grid.Column="1" ResizeDirection="Columns" Width="5" Height="Auto" ResizeBehavior="PreviousAndNext" />
				<TabControl Grid.Column="2" x:Name="graphTabControl" SelectionChanged="graphTabControl_SelectedIndexChanged">
					<TabItem Header="Graph">
                        <ywpf:GraphControl x:Name="graphControl" Background="White"/>
					</TabItem>
					<TabItem Header="Export Preview">
						<Grid>
							<DocumentViewer x:Name="documentViewer" Visibility="Hidden" />
                            <ywpf:CanvasControl x:Name="previewCanvas" Background="White">
								<ywpf:CanvasControl.InputMode>
									<ywpf:MoveViewportInputMode />
								</ywpf:CanvasControl.InputMode>
							</ywpf:CanvasControl>
						</Grid>
					</TabItem>
				</TabControl>
			</Grid>
		</DockPanel>
	</HeaderedContentControl>
</Window>



