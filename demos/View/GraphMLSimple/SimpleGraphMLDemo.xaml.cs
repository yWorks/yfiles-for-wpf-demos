/****************************************************************************
 ** 
 ** This demo file is part of yFiles WPF 3.6.
 ** Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,
 ** 72070 Tuebingen, Germany. All rights reserved.
 ** 
 ** yFiles demo files exhibit yFiles WPF functionalities. Any redistribution
 ** of demo files in source code or binary form, with or without
 ** modification, is not permitted.
 ** 
 ** Owners of a valid software license for a yFiles WPF version that this
 ** demo is shipped with are allowed to use the demo source code as basis
 ** for their own yFiles WPF powered applications. Use of such programs is
 ** governed by the rights and conditions as set out in the yFiles WPF
 ** license agreement.
 ** 
 ** THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
 ** WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 ** MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 ** NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 ** TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 ** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 ** LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 ** NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 ** SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ** 
 ***************************************************************************/

using System;
using System.IO;
using System.Text;
using System.Windows;
using Demo.yFiles.Toolkit;
using yWorks.Controls;
using yWorks.Graph;
using yWorks.GraphML;

namespace Demo.yFiles.IO.GraphML.Simple
{

  /// <summary>
  /// Demo that shows how to load and save a 
  /// graph in the xml-based format GraphML using an instance
  /// of <see cref="GraphMLIOHandler"/>
  /// </summary>
  public partial class SimpleGraphMLDemo
  {
    #region GraphML Demo Code

    /// <summary>
    /// Automatically generated by Visual Studio.
    /// Wires up the UI components and adds a 
    /// <see cref="GraphControl"/> to the form.
    /// </summary>
    public SimpleGraphMLDemo() {
      InitializeComponent();

      //This can also be set in Xaml, of course...
      GraphControl.FileOperationsEnabled = true;
    }

    /// <summary>
    /// Interpret the text content of the text field as graphml
    /// </summary>
    /// <param name="sender"></param>
    /// <param name="e"></param>
    private void ApplyGraphMLButton_Click(object sender, EventArgs e) {
      try {
        using (StringReader reader = new StringReader(graphMLText.Text)) {
          GraphControl.GraphMLIOHandler.Read(Graph, reader);
          GraphControl.FitGraphBounds();
        }
      } catch (Exception exc) {
        var exceptionDialog = new ExceptionDialog(exc) {Owner = this};
        exceptionDialog.ShowDialog();
      }
    }

    private void ShowGraphMLButton_Click(object sender, EventArgs e) {
      ShowGraphML();
    }

    private void ShowGraphML() {
      bool includeGraphSettings = IncludeGraphSettingsButton.IsChecked ?? false;
      try {
        StringBuilder builder = new StringBuilder();
        using (StringWriter writer = new StringWriter(builder)) {
          // set whether to make the handler write the graph settings.
          GraphControl.GraphMLIOHandler.SerializationPropertyOverrides.Set(SerializationProperties.DisableGraphSettings, !includeGraphSettings);
          GraphControl.GraphMLIOHandler.Write(Graph, writer);
          // Use SelectAll and Paste to enable undoability
          graphMLText.SelectAll();
          graphMLText.Text = builder.ToString();
        }
      } catch (Exception exc) {
        var exceptionDialog = new ExceptionDialog(exc) { Owner = this };
        exceptionDialog.ShowDialog();
      }
    }

    #endregion GraphML Demo Code

    /// <summary>
    /// Called upon loading of the form.
    /// This method initializes the graph and the input mode.
    /// </summary>
    /// <seealso cref="InitializeGraph"/>
    protected virtual void OnLoaded(object source, EventArgs e) {
      // initialize the graph
      InitializeGraph();
      ShowGraphML();
    }

    /// <summary>
    /// Initializes the graph instance setting default styles
    /// and creating a small sample graph.
    /// </summary>
    protected virtual void InitializeGraph()
    {
      DemoStyles.InitDemoStyles(Graph);

      Graph.SetUndoEngineEnabled(true);

      //Read initial graph from embedded resource
      GraphControl.ImportFromGraphML("Resources\\styles.graphml");
    }

    #region Standard Demo Actions


    /// <summary>
    /// Callback action that is triggered when the user exits the application.
    /// </summary>
    protected virtual void ExitToolStripMenuItem_Click(object sender, EventArgs e) {
      Application.Current.Shutdown();
    }

    /// <summary>
    /// Returns the GraphControl instance used in the form.
    /// </summary>
    public GraphControl GraphControl {
      get { return graphControl; }
    }

    /// <summary>
    /// Gets the currently registered IGraph instance from the GraphControl.
    /// </summary>
    public IGraph Graph {
      get { return GraphControl.Graph; }
    }

    /// <summary>
    /// Gets the currently registered IGraphSelection instance from the GraphControl.
    /// </summary>
    public IGraphSelection Selection {
      get { return GraphControl.Selection; }
    }

    #endregion
  }
}
