<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Graph.RenderPolicies.RenderPoliciesWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:y="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
    Title="Demo.yFiles.Graph.RenderPolicies" Height="600" Width="900"
        Loaded="OnLoaded" Style="{StaticResource DemoWindow}">
    <HeaderedContentControl Style="{StaticResource DemoStyle}">
        <HeaderedContentControl.Header>
            <RichTextBox BorderThickness="0" IsReadOnly="True">
                <FlowDocument>
                    <Paragraph Style="{StaticResource HtmlH2}">
                        Rendering Order
                    </Paragraph>
                    <Paragraph>
                        Sometimes it is necessary to change the render order of graph items, e.g. when labels should be rendered in front of their owner but behind 
                        another item. This demo shows how to use
                        <Run FontStyle="Italic">yWorks.Controls.GraphModelManager</Run> to configure the rendering order for grouped graphs as well as 
                        layer policies for labels and ports.
                    </Paragraph>
                    <Paragraph Style="{StaticResource HtmlH2}">
                        Hierarchic Nesting
                    </Paragraph>
                    <Paragraph>
                        Each item type is assigned to a specific canvas object group. These groups have a default rendering order from back to front. 
                        See <Run FontStyle="Italic">The Z-order of Graph Elements</Run> for more information about the different <Run FontStyle="Italic">yfiles.view.ICanvasObjectGroups</Run> 
                        and their default rendering order.
                    </Paragraph>
                    <Paragraph>
                        For grouped graphs, we provide some nesting policies to structure nodes and edges in more complex hierarchies. In these cases, some of the canvas
                        object groups may not be used.
                    </Paragraph>
                    <Paragraph Style="{StaticResource HtmlH2}">
                        Demo Configurations
                    </Paragraph>
                    <List Margin="0" Padding="0"  >
                        <ListItem Margin="25,0,0,0">
                            <Paragraph>
                                <Run FontStyle="Italic">Default</Run>: The rendering order that is used by default.
                            </Paragraph>
                        </ListItem>
                        <ListItem Margin="25,0,0,0">
                            <Paragraph>
                                <Run FontStyle="Italic">Labels / Ports at Owner</Run>: The labels and ports are rendered on the same z-order as their owner.
                            </Paragraph>
                        </ListItem>
                        <ListItem Margin="25,0,0,0">
                            <Paragraph>
                                <Run FontStyle="Italic">Edges on Top</Run>: Edges are rendered on top of the nodes. Note in this case, we also enabled the labels 
                                and ports at owner configuration.
                            </Paragraph>
                        </ListItem>
                        <ListItem Margin="25,0,0,0">
                            <Paragraph>
                                <Run FontStyle="Italic">Group Nodes</Run>: Maintains the rendering order according to the nesting depth for group nodes while nodes
                                and edges are placed in the separate groups and are not interleaved in the rendering.
                            </Paragraph>
                        </ListItem>
                        <ListItem Margin="25,0,0,0">
                            <Paragraph>
                                <Run FontStyle="Italic">None</Run>: Items are placed in their respective canvas object group without considering the nesting hierarchy of 
                                the nodes. Usually, this setting is only used when the z-order is managed by a different mechanism.
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </RichTextBox>
        </HeaderedContentControl.Header>
        <DockPanel>
            <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
                <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto" Name="toolBar">
                    <Button Style="{StaticResource BaseToolBarButtonStyle}" ToolTip="Reset the graph" Click="ResetGraph" ContentTemplate="{StaticResource ImageButtonContentTemplate}" Content="{StaticResource RefreshIcon}"/>
                    <Separator/>
                    <Button Command="{x:Static y:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}" />
                    <Separator />
                    <Button Command="Undo" CommandTarget="{Binding ElementName=graphControl}" />
                    <Button Command="Redo" CommandTarget="{Binding ElementName=graphControl}" />
                    <Separator />
                    <Button Command="{x:Static y:GraphCommands.GroupSelection}" CommandTarget="{Binding ElementName=graphControl}" />
                    <Button Command="{x:Static y:GraphCommands.UngroupSelection}" CommandTarget="{Binding ElementName=graphControl}" />
                    <Separator />
                    <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                    <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                    <Separator />
                    <Label>Rendering Order</Label>
                    <ComboBox Name="renderingOrderBox" SelectedIndex="0" Width="170" SelectionChanged="RenderingOrderBoxChanged">
                        <ComboBoxItem>Default</ComboBoxItem>
                        <ComboBoxItem>Labels / Ports at Owner</ComboBoxItem>
                        <ComboBoxItem>Edges on Top</ComboBoxItem>
                        <ComboBoxItem>Group Nodes</ComboBoxItem>
                        <ComboBoxItem>None</ComboBoxItem>
                    </ComboBox>
                </ToolBar>
            </ToolBarTray>
            <y:GraphControl Name="graphControl" FileOperationsEnabled="True"/>
        </DockPanel>
    </HeaderedContentControl>
</Window>
