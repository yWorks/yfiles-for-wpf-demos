<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Graph.EdgeToEdge.EdgeToEdgeWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
    Title="Demo.yFiles.Graph.EdgeToEdge" Height="473" Width="800" 
        Loaded="OnLoaded" Style="{StaticResource DemoWindow}" 
    >
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="newButton_Click"/>
    </Window.CommandBindings>
    <DockPanel>
        <Menu Name="menu" DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Command="New" />
                <MenuItem Command="Open" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator/>
                <MenuItem Command="PrintPreview" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator/>
                <MenuItem Header="Exit" Click="exitToolStripMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Command="Cut" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="Copy" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="Paste" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator/>
                <MenuItem Command="Delete" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator/>
                <MenuItem Command="Undo" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="Redo" CommandTarget="{Binding ElementName=graphControl}"/>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Header="Zoom 1:1" CommandParameter="1" Command="Zoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}" />
            </MenuItem>
            <MenuItem Header="Grouping">
                <MenuItem Command="{x:Static ywpf:GraphCommands.GroupSelection}" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="{x:Static ywpf:GraphCommands.UngroupSelection}" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <MenuItem Command="{x:Static ywpf:GraphCommands.ExpandGroup}" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="{x:Static ywpf:GraphCommands.CollapseGroup}" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <MenuItem Command="{x:Static ywpf:GraphCommands.EnterGroup}" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="{x:Static ywpf:GraphCommands.ExitGroup}" CommandTarget="{Binding ElementName=graphControl}"/>
            </MenuItem>
        </Menu>
        <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
            <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto" Name="toolBar">
                <Button Command="New" Click="newButton_Click"/>
                <Button Command="Open" CommandTarget="{Binding ElementName=graphControl}" />
                <Button Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Button Command="Print" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Button Command="Undo" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="Redo" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Button Command="Cut" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="Copy" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="Paste" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="Delete" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Button Command="{x:Static ywpf:GraphCommands.GroupSelection}" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="{x:Static ywpf:GraphCommands.UngroupSelection}" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <ToggleButton x:Name="snappingButton" ToolTip="Snapping" Click="snappingButton_Click" Content="{StaticResource SnappingIcon}" 
                              ContentTemplate="{StaticResource ImageButtonContentTemplate}" />
                <ToggleButton x:Name="orthogonalEditingButton" ToolTip="Orthogonal Edges" Click="orthogonalEditingButton_Click" Content="{StaticResource OrthogonalEditingIcon}" 
                              ContentTemplate="{StaticResource ImageButtonContentTemplate}" />
                <Separator />
            </ToolBar>
        </ToolBarTray>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <!-- The left pane -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="180" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- The Overview -->
                <DockPanel Grid.Row="0">
                    <HeaderedContentControl Header="Overview" Style="{StaticResource HeaderedContentStyle}">
                        <ywpf:GraphOverviewControl Grid.Row="0" GraphControl="{Binding ElementName=graphControl}"/>
                    </HeaderedContentControl>
                </DockPanel>
                <DockPanel Grid.Row="1">
                    <HeaderedContentControl Header="Description" Style="{StaticResource HeaderedContentStyle}">
                        <ScrollViewer DockPanel.Dock="Left" Width="Auto" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                            <RichTextBox IsReadOnly="True" BorderThickness="0" Padding="5">
                                <FlowDocument>                                    
                                    <Paragraph>
                                        This demo shows edge-to-edge connections.
                                        The input mode of this demo is configured to allow edges to connect not only to nodes but also to edges.
                                    </Paragraph>
                                    <Paragraph>
                                        This application also demonstrates how to provide port candidates at edges to allow interactive creation
                                        of edge-to-edge connections. Please take a look at the code behind to observe some of the customization 
                                        possibilities.
                                    </Paragraph>
                                    <Paragraph Style="{StaticResource HtmlH2}">
                                        Things to Try
                                    </Paragraph>
                                    <List>
                                        <ListItem>
                                            <Paragraph>Create a connection between a node and an edge by pressing the left mouse button on an unselected node and dragging the edge onto another edge.</Paragraph>
                                        </ListItem>
                                        <ListItem>
                                            <Paragraph>Create a connection between two edges by dragging the mouse from an edge onto another edge.</Paragraph>
                                        </ListItem>
                                        <ListItem>
                                            <Paragraph>Hold down the shift modifier when moving the ends of an edge across another edge to create dynamic port candidates that best match the mouse location.</Paragraph>
                                        </ListItem>
                                        <ListItem>
                                            <Paragraph>Start dragging the mouse from various positions on an edge to observe that the best available port location is 
                                                chosen for the source port.</Paragraph>
                                        </ListItem>
                                        <ListItem>
                                            <Paragraph>Re-connect an existing edge by selecting it and dragging the source or target onto another node or edge.</Paragraph>
                                        </ListItem>
                                        <ListItem>
                                            <Paragraph>Try to re-connect an edge's source or target to itself or another edge that connects to the edge that is being re-connected.
                                            There will be no port candidates since connecting an edge to itself or creating a mutual dependency is forbidden in this demo.</Paragraph>
                                        </ListItem>
                                    </List>
                                    <Paragraph>Please note that the bend creation gesture has been customized in this demo. Press the Shift button and drag the mouse on an unselected edge
                                    to create a bend.</Paragraph>
                                </FlowDocument>
                            </RichTextBox>
                        </ScrollViewer>
                    </HeaderedContentControl>
                </DockPanel>
            </Grid>
            <GridSplitter Width="5" Grid.Column="1" ResizeBehavior="PreviousAndNext" />
                <ywpf:GraphControl Grid.Column="2" Width="Auto" x:Name="graphControl" FileOperationsEnabled="True"/>
        </Grid>
    </DockPanel>
</Window>
