<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Graph.CustomPortModel.CustomPortModelWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:y="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
    Title="Demo.yFiles.Graph.CustomPortModel" Height="500" Width="800"
    Loaded="OnLoaded" Style="{StaticResource DemoWindow}">
    <HeaderedContentControl Style="{StaticResource DemoStyle}">
        <HeaderedContentControl.Header>
            <RichTextBox BorderThickness="0" IsReadOnly="True">
                <FlowDocument>
                    <Paragraph>
                        This demo shows how to create and use a custom
                        <Run FontStyle="Italic">IPortLocationModel</Run> .
                    </Paragraph>
                    <Paragraph Style="{StaticResource HtmlH2}">
                        Things to Try
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>Create new nodes in the canvas and interconnect them with new edges.</Paragraph>
                            <Paragraph>Note that a specialized set of possible port candidates is shown.
                            The candidates use a custom port location model that offers five possible locations
                            on each node.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Click on one of the nodes and then drag the handle that depicts a port.</Paragraph>
                            <Paragraph>Note that you can only drag the handle to the locations that are supported by the model.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Try saving and loading the graph. Note that for this custom port location model serialization is easy
                            because of the MarkupExtension based serialization mechanism that is used to 
                            serialize the (otherwise) internal parameter class which can only be created via the factory methods.</Paragraph>
                        </ListItem>
                    </List>
                    <Paragraph Style="{StaticResource HtmlH2}">
                        Related Demos
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>
                                See the
                                <Run FontStyle="Italic">Demo.yFiles.Graph.CustomLabelModel</Run> demo
                                to learn how to customize the models for label. Note that the code is very
                                similar as the same concepts are being applied.
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </RichTextBox>
        </HeaderedContentControl.Header>
        <DockPanel>
            <Menu Name="menu" DockPanel.Dock="Top">
                <MenuItem Header="File">
                    <MenuItem Command="Open" CommandTarget="{Binding ElementName=graphControl}"/>
                    <MenuItem Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Separator/>
                    <MenuItem Header="Exit" Click="OnExitClicked"/>
                </MenuItem>
                <MenuItem Header="Edit">
                    <MenuItem Command="Cut" CommandTarget="{Binding ElementName=graphControl}"/>
                    <MenuItem Command="Copy" CommandTarget="{Binding ElementName=graphControl}"/>
                    <MenuItem Command="Paste" CommandTarget="{Binding ElementName=graphControl}"/>
                    <MenuItem Command="Delete" CommandTarget="{Binding ElementName=graphControl}"/>
                </MenuItem>
                <MenuItem Header="View">
                    <MenuItem Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                    <MenuItem Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                    <MenuItem Command="{x:Static y:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}"/>
                </MenuItem>
            </Menu>
            <y:GraphControl Name="graphControl" FileOperationsEnabled="True"/>
        </DockPanel>
    </HeaderedContentControl>
</Window>
