<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<UserControl x:Class="Demo.yFiles.Layout.Tree.NodePlacerPanel" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Tree="clr-namespace:Demo.yFiles.Layout.Tree"
             xmlns:controls="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
             xmlns:option="http://www.yworks.com/yfilesWPF/3.0/demos/optionhandler"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="300" x:Name="nodePlacerPanel" MinWidth="275">
	<UserControl.Resources>
		<Tree:DescriptorVisibilityConverter x:Key="descriptorVisibilityConverter" />
		<Tree:LevelConverter x:Key="levelConverter" />
		<option:XamlLocalizingConverter x:Key="ItemNameLocalizer" />
	</UserControl.Resources>
	<StackPanel Orientation="Vertical">
        <DockPanel Margin="0,0,0,5">
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                <Label>Layer</Label>
                <TextBox Width="30" x:Name="layerNumberEntryBox" VerticalContentAlignment="Center">
                    <TextBox.Text>
                        <Binding ElementName="nodePlacerPanel" Path="Level" Converter="{StaticResource levelConverter}">
                            <Binding.ValidationRules>
                                <ExceptionValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <Label Width="50" BorderBrush="Black" BorderThickness="1" Margin="5,0,0,0" x:Name="layerVisualizationBorder" />
            </StackPanel>
            <Grid DockPanel.Dock="Right" Grid.IsSharedSizeScope="True" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="A" Width="70"/>
                    <ColumnDefinition SharedSizeGroup="A"/>
                </Grid.ColumnDefinitions>
                <Button Margin="12,0,0,0" x:Name="applyLayerConfigurationButton" Click="OnApplyButtonClicked" IsDefault="True"
                        ToolTip="Apply Settings">Apply</Button>
                <Button Margin="12,0,0,0" Grid.Column="1" x:Name="reloadButton" Click="OnReloadButtonClicked"
                        ToolTip="Reset Settings" >Reset</Button>
            </Grid>
        </DockPanel>
		<Separator Margin="0" Height="2" />
		<DockPanel Margin="0,5">
			<StackPanel Margin="0,0,0,5" Orientation="Horizontal" DockPanel.Dock="Top">
				<Label>Type:</Label>
				<ComboBox x:Name="nodePlacerTypeComboBox" Width="150" SelectionChanged="NodePlacerComboBoxSelectionChanged" Margin="20,0,0,0" />
			</StackPanel>
			<Expander Header="Rotation" Width="Auto" DockPanel.Dock="Top" IsExpanded="True" Visibility="{Binding ElementName=nodePlacerPanel, Path=CurrentDescriptor.Configuration, Converter={StaticResource descriptorVisibilityConverter}}">
				<Grid Width="Auto" Height="Auto" x:Name="rotationGrid">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Label Content="Rotate" Grid.Column="0" Grid.Row="0" Margin="10,5,0,5" />
					<Label Content="Mirror" Grid.Column="0" Grid.Row="1" Margin="10,5,0,5" />
					<Button Content="Left" Click="LeftRotateButtonClicked" x:Name="leftRotateButton" Grid.Column="1" Grid.Row="0" Margin="0,5,0,5" Width="70" />
					<Button Content="Right" Click="RightRotateButtonClicked" x:Name="rightRotateButton" Grid.Column="2" Grid.Row="0" Margin="0,5,10,5" Width="70" />
					<Button Content="Horiz" Click="MirrorHorizButtonClicked" x:Name="horizMirrorButton" Grid.Column="1" Grid.Row="1" Margin="0,5,0,5" Width="70" />
					<Button Content="Vert" Click="MirrorVertButtonClicked" x:Name="vertMirrorButton" Grid.Column="2" Grid.Row="1" Margin="0,5,10,5" Width="70" />
				</Grid>
			</Expander>
			<Expander Header="Properties" Width="Auto" IsExpanded="True" Visibility="{Binding ElementName=nodePlacerPanel, Path=CurrentDescriptor.Configuration, Converter={StaticResource descriptorVisibilityConverter}}">
				<option:EditorControl x:Name="editorControl" Margin="0,5,0,0">
					<option:EditorControl.Resources>
                        <!-- Style for the child placer group of the assistant node placer -->
						<Style x:Key="NestedChildNodePlacer.OptionItemPresenter" TargetType="option:OptionItemPresenter">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="option:OptionItemPresenter">
										<ItemsControl ItemsSource="{TemplateBinding ChildItems}" Margin="4,6,4,4" KeyboardNavigation.IsTabStop="false">
											<ItemsControl.ItemsPanel>
												<ItemsPanelTemplate>
													<option:TablePanel />
												</ItemsPanelTemplate>
											</ItemsControl.ItemsPanel>
											<ItemsControl.Template>
												<ControlTemplate>
													<Expander ExpandDirection="Down" Header="{Binding Converter={StaticResource ItemNameLocalizer}, Mode=OneWay}" IsExpanded="true" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" BorderBrush="Gray">
														<ItemsPresenter Margin="5" />
													</Expander>
												</ControlTemplate>
											</ItemsControl.Template>
											<ItemsControl.ItemTemplate>
												<DataTemplate>
													<option:OptionItemPresenter Item="{Binding}" />
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</option:EditorControl.Resources>
				</option:EditorControl>
			</Expander>
		</DockPanel>
		<Separator Margin="0" Height="2" />
		<TextBlock FontWeight="Bold" Text="{Binding ElementName=nodePlacerPanel, Path=CurrentDescriptor.Name}" Width="Auto" Margin="0,5" />
		<TextBlock Text="{Binding ElementName=nodePlacerPanel, Path=CurrentDescriptor.Description}" Width="Auto" Height="Auto" TextWrapping="Wrap" Margin="0,5" />
		<Separator Margin="0" Height="2" />
		<controls:GraphControl x:Name="previewControl" BorderBrush="Black" Margin="0,15,0,0" Width="Auto" Height="300" />
	</StackPanel>
</UserControl>