<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Layout.MultiPage.MultiPageWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:y="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml" xmlns:MultiPage="clr-namespace:Demo.yFiles.Layout.MultiPage"
        Title="Demo.yFiles.Layout.MultiPage" Height="600" Width="800" Loaded="OnLoaded" Style="{StaticResource DemoWindow}">
	<Window.Resources>
	</Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="MultiPage:MultiPageWindow.PreviousPageCommand" CanExecute="PreviousPage_CanExecute" Executed="PreviousPage_Executed"/>
        <CommandBinding Command="MultiPage:MultiPageWindow.NextPageCommand" CanExecute="NextPage_CanExecute" Executed="NextPage_Executed"/>
    </Window.CommandBindings>
	<HeaderedContentControl Style="{StaticResource DemoStyle}">
		<HeaderedContentControl.Header>
			<RichTextBox BorderThickness="0" IsReadOnly="True">
				<FlowDocument>
					<Paragraph Style="{StaticResource HtmlH2}">
						How Multi-Page Layout Works
					</Paragraph>
					<Paragraph>
						MultiPageLayout subdivides a large graph (called model graph) into a set of smaller graphs (called page
						graphs) such that the layout of each page graph fits a specified maximum page size. To guarantee that no
						information is lost when distributing the elements of the model over several pages, the algorithm introduces
						three kinds of
						<Run FontStyle="Italic">auxiliary nodes</Run>
						:
					</Paragraph>
					<BlockUIContainer>
                        <Grid>
						    <y:NodeControl Style="{StaticResource ConnectorNodeTemplate}" Height="40" />
                            <Rectangle Fill="#FFFFC499" Width="90" Height="20" RadiusX="5" RadiusY="5"/>
                            <TextBlock Foreground="#FF662B00" VerticalAlignment="Center" HorizontalAlignment="Center">Connector</TextBlock>
                        </Grid>
                    </BlockUIContainer>
					<Paragraph>
						The layout algorithm replaces edges between nodes on different pages by so-called connector nodes. More
						precisely, for each edge between two nodes v and w that belong to different page graphs, there is a connector
						node attached to v that has the same label as node w. Similarly, there is a connector node attached to w that
						has the same label as node v. Click on a connector node to switch to the page graph that holds the related
						element.
					</Paragraph>
					<BlockUIContainer>
                        <Grid>
						    <y:NodeControl Style="{StaticResource ProxyNodeTemplate}" Height="40" />
                            <Rectangle Fill="#FFC8DFB3" Width="60" Height="20" RadiusX="5" RadiusY="5"/>
                            <TextBlock Foreground="#FF2F461A" VerticalAlignment="Center" HorizontalAlignment="Center">Proxy</TextBlock>
                        </Grid>
					</BlockUIContainer>
					<Paragraph>
						The layout algorithm may also replicate a node as one or more proxy nodes, if the original node and its direct
						neighbors do not fit onto a single page. Proxy nodes have the same label as the node they replicate. Click on
						a proxy node to switch to the page graph that holds the replicated node.
					</Paragraph>
					<BlockUIContainer>
                        <Grid>
						    <y:NodeControl Style="{StaticResource ProxyReferenceNodeTemplate}" Height="40" />
                            <Rectangle Fill="#FFDDA7B5" Width="110" Height="20" RadiusX="5" RadiusY="5"/>
                            <TextBlock Foreground="#FF440E1C" VerticalAlignment="Center" HorizontalAlignment="Center">Proxy Reference</TextBlock>
                        </Grid>
					</BlockUIContainer>
					<Paragraph>
						For each proxy node the layout algorithm creates a so-called proxy reference node in the page graph that holds
						the node which is replicated by the proxy. Proxy reference nodes are labeled with the number of the page graph
						that holds the referenced proxy node. Click on a proxy reference node to switch to the page graph that
						holds the referenced proxy node.
					</Paragraph>
				</FlowDocument>
			</RichTextBox>
		</HeaderedContentControl.Header>
		<Grid x:Name="mainGrid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0" />
				<ColumnDefinition Width="0" />
				<ColumnDefinition Width="0.5*" />
				<ColumnDefinition Width="5" />
				<ColumnDefinition Width="200" />
			</Grid.ColumnDefinitions>
			<DockPanel Grid.Column="0">
                <ToolBarTray Height="Auto" Width="Auto" DockPanel.Dock="Top">
                    <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto">
                        <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=originalGraphControl}" />
                        <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=originalGraphControl}" />
                        <Button Command="{x:Static y:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=originalGraphControl}" />
                        <Separator />
                    </ToolBar>
                </ToolBarTray>
                <y:GraphControl Name="originalGraphControl" Width="auto">
					<y:GraphControl.InputMode>
						<y:GraphViewerInputMode SelectableItems="None" ClickableItems="None" />
					</y:GraphControl.InputMode>
				</y:GraphControl>
			</DockPanel>
			<GridSplitter x:Name="gridSplitter" Width="5" Grid.Column="1" ResizeBehavior="PreviousAndNext" IsEnabled="False" />
			<DockPanel Grid.Column="2">
                <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
                    <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto" Name="toolBar">
                        <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                        <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                        <Button Command="{x:Static y:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}" />
                        <Separator />
                        <Label>Page:</Label>
                        <Button ToolTip="Previous Page" Command="MultiPage:MultiPageWindow.PreviousPageCommand" 
                                Content="{StaticResource ArrowLeftIcon}" ContentTemplate="{StaticResource ImageButtonContentTemplate}" />
                        <TextBox x:Name="pageNumberTextBox" KeyDown="PageNumberTextBox_KeyDown" Width="40" />
                        <Button ToolTip="Next Page" Command="MultiPage:MultiPageWindow.NextPageCommand" 
                                Content="{StaticResource ArrowRightIcon}" ContentTemplate="{StaticResource ImageButtonContentTemplate}" />
                    </ToolBar>
                </ToolBarTray>
                <Grid>
                    <y:GraphControl Name="graphControl"></y:GraphControl>
                    <Grid x:Name="loadingIndicator">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.5*"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="0.5*"/>
                        </Grid.RowDefinitions>
                        <StackPanel Background="#AA000000" Grid.Row="1"/>
                        <StackPanel Grid.Row="1" VerticalAlignment="Center">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White">Loading...</TextBlock>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,5">
                                <Hyperlink Click="StopLayoutButtonClick" Foreground="White"><TextBlock Name="StopButton">Stop</TextBlock></Hyperlink>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </Grid>
			</DockPanel>
			<GridSplitter Width="5" Grid.Column="3" ResizeBehavior="PreviousAndNext" />
            <HeaderedContentControl Grid.Column="4" Style="{StaticResource DescriptionStyle}" Header="Layout Settings" BorderThickness="1,0,0,0">
                <Grid>
                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="Margin" Value="0,5" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type ComboBox}">
                            <Setter Property="Margin" Value="0,5" />
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Column="0" Grid.Row="0">Page Width</Label>
                    <TextBox Grid.Column="1" Grid.Row="0" x:Name="pageWidthTextBox">800</TextBox>
                    <Label Grid.Column="0" Grid.Row="1">Page Height</Label>
                    <TextBox Grid.Column="1" Grid.Row="1" x:Name="pageHeightTextBox">800</TextBox>
                    <Label Grid.Column="0" Grid.Row="2">Core Layout</Label>
                    <ComboBox Grid.Column="1" Grid.Row="2" x:Name="coreLayoutComboBox"></ComboBox>
                    <Button Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" Click="RunLayout_Click" Margin="5,15,0,5">Run Layout</Button>
                    <ToggleButton x:Name="showInputGraphButton" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" Click="ShowInputGraph_Click" Margin="5,5,0,5">Show Input Graph</ToggleButton>
                </Grid>
            </HeaderedContentControl>
		</Grid>
	</HeaderedContentControl>
</Window>
