<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.5.                           -->
<!-- Copyright (c) 2000-2022 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Layout.PreferredLabelPlacement.PreferredLabelPlacementWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:option="http://www.yworks.com/yfilesWPF/3.0/demos/optionhandler"
        xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
        Title="Demo.yFiles.Layout.PreferredLabelPlacement" Height="600" Width="900" Loaded="OnLoad"
    Style="{StaticResource DemoWindow}">
  <Window.Resources>
    <Style x:Key="OptionGroupPresenter" TargetType="option:OptionItemPresenter">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="option:OptionItemPresenter">
            <ItemsControl ItemsSource="{TemplateBinding ChildItems}" HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel HorizontalAlignment="Stretch" Orientation="Vertical" />
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
              <ItemsControl.ItemTemplate>
                <DataTemplate>
                  <option:OptionItemPresenter Item="{Binding}" HorizontalAlignment="Stretch"
                      HorizontalContentAlignment="Stretch" />
                </DataTemplate>
              </ItemsControl.ItemTemplate>
            </ItemsControl>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Window.Resources>
  <HeaderedContentControl Style="{StaticResource DemoStyle}">
    <HeaderedContentControl.Header>
      <RichTextBox BorderThickness="0" IsReadOnly="True">
        <FlowDocument>
          <Paragraph>
            Shows how the PreferredPlacementDescriptor for edge labels affects the label placement of layout algorithms.
          </Paragraph>

          <Paragraph Style="{StaticResource HtmlH2}">Usage</Paragraph>

          <List>
            <ListItem>
              <Paragraph>
                To add a new label to a selected edge, press Shift + F2.
              </Paragraph>
            </ListItem>

            <ListItem>
              <Paragraph>
                Changes of the label properties are immediately applied to the selected labels, or to all labels if no
                label is selected, and a new layout is calculated to visualize the result of these settings.
              </Paragraph>
            </ListItem>

            <ListItem>
              <Paragraph>
                The selected layout is calculated immediately after changing any of the label properties or if
                the Refresh Layout button is pressed.
              </Paragraph>
            </ListItem>
          </List>

          <Paragraph Style="{StaticResource HtmlH2}">Edge Label Properties</Paragraph>

          <Paragraph Style="{StaticResource HtmlDt}">Distance to Edge</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            The distance between the edge and the closest label corner.
          </Paragraph>
          <Paragraph Style="{StaticResource HtmlDt}">Placement Along Edge</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            Whether the label should be placed near the source or target node, centered between source and target or
            anywhere.
          </Paragraph>
          <Paragraph Style="{StaticResource HtmlDt}">Side of Edge</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            Whether the label should be placed centered on the edge or on the left or right side.
          </Paragraph>
          <Paragraph Style="{StaticResource HtmlDt}">Side Reference</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            Determines if 'left' and 'right' of the edge are interpreted relative to the edge direction or using the
            absolute position. In the latter case, the side is ambiguous for horizontal segments, and either the left or
            the right side can be 'North' of the edge.
          </Paragraph>
          <Paragraph Style="{StaticResource HtmlDt}">Angle (In Degrees)</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            The rotation angle (in degrees) of the label.
          </Paragraph>
          <Paragraph Style="{StaticResource HtmlDt}">Angle Reference</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            Whether the rotation angle is relative to the edge slope or absolute.
          </Paragraph>
          <Paragraph Style="{StaticResource HtmlDt}">Angle Rotation on Right Side</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            While the angle for labels on the edge and left of the edge is always interpreted clockwise, the rotation for
            labels on the right side can either be interpreted clockwise or counter-clockwise.
          </Paragraph>
          <Paragraph Style="{StaticResource HtmlDt}">Add 180 Degree on Right Side</Paragraph>
          <Paragraph Style="{StaticResource HtmlDi}">
            Whether labels on the right side should be rotated by additional 180 degrees.
          </Paragraph>
        </FlowDocument>
      </RichTextBox>
    </HeaderedContentControl.Header>
    <DockPanel>
      <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
        <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto" Name="toolBar">
          <Button x:Name="undoButton" Command="Undo" CommandTarget="{Binding ElementName=graphControl}" />
          <Button x:Name="redoButton" Command="Redo" CommandTarget="{Binding ElementName=graphControl}" />
          <Separator />
          <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
          <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
          <Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}"
              CommandTarget="{Binding ElementName=graphControl}" />
          <Separator />
          <Label Width="Auto" Content="Layout:" />
          <ComboBox x:Name="layoutComboBox" Width="160" />
          <Button x:Name="doLayoutButton" ToolTip="Refresh Layout" Click="OnDoLayoutButtonClicked" Content="{StaticResource LayoutIcon}" 
                  ContentTemplate="{StaticResource ImageButtonContentTemplate}"/>
        </ToolBar>
      </ToolBarTray>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="5" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ywpf:GraphControl Name="graphControl" Grid.Column="0" FileOperationsEnabled="True" />
        <GridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext" />
        <DockPanel Grid.Column="2">
          <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
              <TextBlock Style="{StaticResource HeaderTemplateStyle}">Edge Label Properties</TextBlock>
              <option:EditorControl x:Name="editorControl" Margin="2">
                <option:EditorControl.Resources>
                  <Style x:Key="OptionGroup.Level1.OptionItemPresenter"
                      TargetType="option:OptionItemPresenter"
                      BasedOn="{StaticResource OptionGroupPresenter}" />
                </option:EditorControl.Resources>
              </option:EditorControl>
            </StackPanel>
          </ScrollViewer>
        </DockPanel>
      </Grid>
    </DockPanel>
  </HeaderedContentControl>
</Window>



