<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.5.                           -->
<!-- Copyright (c) 2000-2022 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:ControlStyles="clr-namespace:Demo.yFiles.Graph.ControlStyles"     
    xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
>    
    <Style x:Key="CustomerNodeTemplate" TargetType="ywpf:NodeControl">
        <Setter Property="MinHeight" Value="80"/>
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type ControlStyles:Customer}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Id: "/>
                            <TextBlock Text="{Binding Id}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Location: "/>
                            <TextBlock Text="{Binding Location}"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <!-- Background Gradient -->
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#FFCCFFFF" />
                        <GradientStop Offset="1" Color="#FF249ae7" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ywpf:NodeControl">
                    <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel>
                            <!-- Name -->
                            <Border>
                                <Border.Background>
                                    <SolidColorBrush x:Name="ShineBrush" Opacity="0.25" Color="White" />
                                </Border.Background>
                                <TextBlock Margin="1,10,1,5" x:Name="NameTextBlock" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content.Name}" TextAlignment="Center" HorizontalAlignment="Center" FontSize="13"/>
                            </Border>
                            <!-- Other Properties -->
                            <ContentPresenter Margin="10,10,0,0"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemSelected" Value="true">
                            <Setter TargetName="NameTextBlock" Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="ItemFocused" Value="true">
                            <Setter Property="BorderBrush" Value="Black"/>
                        </Trigger>
                        <Trigger Property="ItemHighlighted" Value="true">
                            <Setter TargetName="border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Orange" Opacity="1" BlurRadius="20" ShadowDepth="0" RenderingBias="Performance"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProductNodeTemplate" BasedOn="{StaticResource CustomerNodeTemplate}" TargetType="ywpf:NodeControl">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type ControlStyles:Product}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Id: "/>
                            <TextBlock Text="{Binding Id}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="In Stock: "/>
                            <CheckBox IsChecked="{Binding InStock}" IsEnabled="False"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <!-- Background Gradient -->
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#FFFFDD33" />
                        <GradientStop Offset="1" Color="#FFFF7733" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LabelTemplate" TargetType="ywpf:LabelControl" >
        <Setter Property="Background">
            <Setter.Value>
                <!-- Background Gradient -->
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStop Offset="0" Color="#FFFFFFBB" />
                        <GradientStop Offset="1" Color="#FFFFEE77" />
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type ControlStyles:Relation}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=Product.Name}" FontSize="6"/>
                        <TextBlock Text=" &lt;- " FontSize="6"/>
                        <TextBlock Text="{Binding Path=Customer.Name}" FontSize="6"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ywpf:LabelControl">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" MinWidth="100">
                        <StackPanel Orientation="Vertical" Margin="5">
                            <TextBlock x:Name="LabelTextBlock"  Text="{TemplateBinding LabelText}" TextAlignment="Center" FontSize="12" Margin="3"/>
                            <ContentPresenter x:Name="contentPresenter"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemSelected" Value="true">
                            <Setter TargetName="LabelTextBlock" Property="FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="IsFlipped" Value="true">
                            <Setter TargetName="contentPresenter" Property="FlowDirection" Value="RightToLeft"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PortTemplate" TargetType="ywpf:PortControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ywpf:PortControl">
                    <Border x:Name="border" CornerRadius="5">
                        <Border.Background>
                            <!-- Background Gradient -->
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="#FFFFFFBB" />
                                    <GradientStop x:Name="Color2"  Offset="1" Color="#FFFFEE77" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Color2" Storyboard.TargetProperty="Color" To="Black" Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Color2" Storyboard.TargetProperty="Color" Duration="0:0:1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EdgeSegmentTemplate" TargetType="ywpf:EdgeSegmentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ywpf:EdgeSegmentControl">
                    <Grid>
                        <Rectangle x:Name="rectangle" RadiusX="2.5" RadiusY="2.5" Margin="-2.5,0,-2.5,0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="30, 30" StartPoint="0,0" SpreadMethod="Repeat" MappingMode="Absolute">
                                    <GradientStop Color="Orange" Offset="0"/>
                                    <GradientStop Color="OrangeRed" Offset="0.5"/>
                                    <GradientStop Color="Orange" Offset="1"/>
                                    <LinearGradientBrush.Transform>
                                        <TranslateTransform/>
                                    </LinearGradientBrush.Transform>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Polygon x:Name="targetArrow" Points="10, 2.5, 0, 0, 0, 5" Fill="{Binding ElementName=rectangle, Path=Fill}" VerticalAlignment="Stretch" HorizontalAlignment="Right" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard>
                                                                        <Storyboard  RepeatBehavior="Forever" AutoReverse="False">
                                    <DoubleAnimation Storyboard.TargetName="rectangle" Storyboard.TargetProperty="Fill.Transform.X" From="0" To="60" AutoReverse="False" Duration="0:00:00.8" RepeatBehavior="Forever"/>
                                                                        </Storyboard>

                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsLast" Value="true">
                            <Setter TargetName="rectangle" Property="Margin" Value="-2.5,0,7.5,0"/>
                            <Setter TargetName="targetArrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOverEdge" Value="true">
                            <Setter TargetName="rectangle" Property="StrokeThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="ItemSelected" Value="true">
                            <Setter TargetName="rectangle" Property="Stroke" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
