<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Graph.BezierEdgeStyle.BezierEdgeStyleWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
    xmlns:bezierEdgeStyle="clr-namespace:Demo.yFiles.Graph.BezierEdgeStyle"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    Title="Demo.yFiles.Graph.BezierEdgeStyle" Height="473" Width="800" 
        Loaded="OnLoaded" Style="{StaticResource DemoWindow}" x:Name="window"
    >
    <Window.Resources>
        <bezierEdgeStyle:DoubleConverter x:Key="DoubleConverter"/>
        <x:Array Type="system:String" x:Key="Graphs">
            <system:String>Circular Layout</system:String>
            <system:String>Graph with Labels</system:String>
        </x:Array>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="newButton_Click"/>
    </Window.CommandBindings>
    <DockPanel>
        <Menu Name="menu" DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Command="New" />
                <MenuItem Command="Open" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator/>
                <MenuItem Header="Exit" Click="exitToolStripMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Command="Cut" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="Copy" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="Paste" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator/>
                <MenuItem Command="Delete" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator/>
                <MenuItem Command="Undo" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="Redo" CommandTarget="{Binding ElementName=graphControl}"/>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Header="Zoom 1:1" CommandParameter="1" Command="Zoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}" />
            </MenuItem>
        </Menu>
        <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
            <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto" Name="toolBar">
                <Button Command="New" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="Open" CommandTarget="{Binding ElementName=graphControl}" />
                <Button Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Button Command="Undo" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="Redo" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}"/>
                <Separator />
                <Label Content="Sample:"/>
                <ComboBox SelectionChanged="OnSampleChanged" SelectedIndex="0" 
                          Width="120" ToolTip="Select another sample graph" ItemsSource="{StaticResource Graphs}" x:Name="sampleGraphs"/>
                <Separator/>
                <CheckBox IsChecked="{Binding ElementName=window, Path=EnableEditing}" Content="Enable Editing"/>
                <CheckBox IsChecked="{Binding ElementName=window, Path=SmoothEditing}" Content="Smooth Editing"/>
                <Separator/>
                <Label Content="Label Handling:"/>
                <CheckBox IsChecked="{Binding ElementName=window, Path=AutoRotation}" Content="Auto Rotation"/>
                <CheckBox IsChecked="{Binding ElementName=window, Path=AutoSnapping}" Content="Auto Snapping"/>
                <Label Content="Angle: "/>
                <TextBox Text="{Binding ElementName=window, Path=Angle, Converter={StaticResource DoubleConverter}}" Width="30"/>
            </ToolBar>
        </ToolBarTray>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <!-- The left pane -->
                <Grid.RowDefinitions>
                    <RowDefinition Height="180" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- The Overview -->
                <HeaderedContentControl Grid.Row="0" Header="Overview" Style="{StaticResource HeaderedContentStyle}" BorderThickness="0,0,1,0">
                    <ywpf:GraphOverviewControl x:Name="Overview" Grid.Row="0" GraphControl="{Binding ElementName=graphControl}"/>
                </HeaderedContentControl>
                <HeaderedContentControl Grid.Row="1" Header="Description" Style="{StaticResource HeaderedContentStyle}" BorderThickness="0,0,1,0">
                    <ScrollViewer DockPanel.Dock="Left" Width="Auto" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Padding="5">
                        <RichTextBox IsReadOnly="True" BorderThickness="0">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Style="{StaticResource HtmlCode}">BezierEdgeStyle</Run> allows for smooth curved edge routes.
                                    This demo shows how to use this style and interactively edit the B&#233;zier curves.
                                </Paragraph>
                                <Paragraph Style="{StaticResource HtmlH2}">Creating Edges</Paragraph>
                                <Paragraph>
                                    Start dragging at an unselected node and click on the canvas to add bends or control
                                    points for the B&#233;zier curve.
                                </Paragraph>
                                <Paragraph>
                                    When <Run Style="{StaticResource HtmlEm}">Smooth Editing</Run> is enabled, the edge path will
                                    consist of only smooth curves, otherwise there will be sharp bends every other spline.
                                </Paragraph>
                                <Paragraph Style="{StaticResource HtmlH2}">Label Handling</Paragraph>
                                <Paragraph>
                                    Labels can also be arranged at the curved splines. They can be aligned with different orientations.
                                </Paragraph>
                                <Paragraph>
                                    Select an edge and press <Run Style="{StaticResource HtmlCode}">F2</Run> to add a label or use the
                                    sample <Run Style="{StaticResource HtmlEm}">Graph with Labels</Run> which provides labels with
                                    varying settings.
                                </Paragraph>
                                <List>
                                    <ListItem>
                                        <Paragraph>
                                            <Run Style="{StaticResource HtmlEm}">Auto Rotation</Run> will rotate the label according
                                            its position at the curved path.
                                        </Paragraph>
                                    </ListItem>
                                    <ListItem>
                                        <Paragraph>
                                            <Run Style="{StaticResource HtmlEm}">Auto Snapping</Run> snaps the label on the edge path
                                            if sufficiently close.
                                        </Paragraph>
                                    </ListItem>
                                    <ListItem>
                                        <Paragraph>
                                            The <Run Style="{StaticResource HtmlEm}">Angle</Run> rotates the label.
                                            If <Run Style="{StaticResource HtmlEm}">Auto Rotation</Run> is enabled, the angle will be
                                            added to the rotation resulting from the curved path.
                                        </Paragraph>
                                    </ListItem>
                                </List>
                            </FlowDocument>
                        </RichTextBox>
                    </ScrollViewer>
                </HeaderedContentControl>
            </Grid>
            <GridSplitter Width="5" Grid.Column="1" ResizeBehavior="PreviousAndNext" />
                <ywpf:GraphControl Grid.Column="2" Width="Auto" x:Name="graphControl" FileOperationsEnabled="True"/>
        </Grid>
    </DockPanel>
</Window>
