<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.5.                           -->
<!-- Copyright (c) 2000-2022 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Graph.UMLClassStyle.UMLClassStyleDemo"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
    xmlns:local="clr-namespace:Demo.yFiles.Graph.UMLClassStyle"
    Title="Demo.yFiles.Graph.UMLClassStyle" Height="500" Width="800" Loaded="OnLoaded"
    Style="{StaticResource DemoWindow}">
    <Window.CommandBindings>
        <!-- Custom command binding for auto resize command -->
        <CommandBinding Command="ywpf:NodeControl.UpdateNodeSizeCommand" CanExecute="ResizeNodeCanExecute" Executed="ResizeNodeExecuted" />
    </Window.CommandBindings>
    <Window.Resources>
        <DataTemplate x:Key="{x:Type local:ClassInfo}" >
        	<StackPanel Orientation="Vertical">
        		<TextBlock Text="{Binding Name}" />
        		<TextBlock Text="{Binding Type}" />
        	</StackPanel>
        </DataTemplate>


        <BitmapImage x:Key="Public" UriSource="Resources\pill_blue.png"/>
        <BitmapImage x:Key="Protected" UriSource="Resources\pill_green.png"/>
        <BitmapImage x:Key="Private" UriSource="Resources\pill_red.png"/>

        <DataTemplate x:Key="{x:Type local:FeatureInfo}" DataType="{x:Type local:FeatureInfo}">
            <DockPanel>
                <Image x:Name="image"  Width="16" Height="16" Source="{StaticResource Public}"/>
                <TextBlock Text="{Binding Signature}"/>
            </DockPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Modifier}" Value="{x:Static local:FeatureModifier.Protected}">
                    <Setter TargetName="image" Property="Source" Value="{StaticResource Protected}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Modifier}" Value="{x:Static local:FeatureModifier.Private}">
                    <Setter TargetName="image" Property="Source" Value="{StaticResource Private}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <HierarchicalDataTemplate x:Key="{x:Type local:FeatureSection}" ItemsSource="{Binding}" ItemTemplate="{StaticResource {x:Type local:FeatureInfo}}" DataType="{x:Type local:FeatureSection}">
            <TextBlock Text="{Binding Name}" />
        </HierarchicalDataTemplate>

        <Style x:Key="ExpandCollapseToggleStyle"
            TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
              Value="False"/>
            <Setter Property="Width"
              Value="19"/>
            <Setter Property="Height"
              Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="19"
                    Height="13"
                    Background="Transparent">
                            <Border Width="9"
                      Height="9"
                      BorderThickness="1"
                      BorderBrush="#FF7898B5"
                      CornerRadius="1"
                      SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="White"
                                    Offset=".2"/>
                                            <GradientStop Color="#FFC0B7A6"
                                    Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="ExpandPath"
                      Margin="1,1,1,1"
                      Fill="Black"
                      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 
                            L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                       Value="True">
                                <Setter Property="Data"
                        TargetName="ExpandPath"
                        Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="UMLTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding ShowDetails, Mode=TwoWay}"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel x:Name="Leaf" Orientation="Vertical"> 
                            <StackPanel x:Name="Header" Orientation="Horizontal"
                                        Background="{TemplateBinding Background}">
                                <ToggleButton x:Name="Expander"
                              Style="{StaticResource ExpandCollapseToggleStyle}"
                              IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press"/>
                                <Border Name="Bd"
                      Padding="{TemplateBinding Padding}"
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}"
                      SnapsToDevicePixels="true">
                                    <ContentPresenter ContentSource="Header"/>
                                </Border>
                            </StackPanel>
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded"
                       Value="false">
                                <Setter TargetName="ItemsHost"
                        Property="Visibility"
                        Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems"
                       Value="false">
                                <Setter TargetName="Expander"
                        Property="Visibility"
                        Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="HasItems"
                       Value="true">
                                <Setter TargetName="Header"
                        Property="Background"
                        Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsSelected"
         Value="true">
                                <Setter TargetName="Header"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                             Value="true"/>
                                    <Condition Property="IsSelectionActive"
                             Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Header"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                       Value="false">
                                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ClassInfoNodeStyle" TargetType="ywpf:NodeControl">
            <!-- Switch on auto node size updating in order to make expander work -->
            <Setter Property="AutoUpdateNodeSize" Value="true" />
            <!-- Prevent mouse up events being propagated to the canvas if their corresponding mouse down event has been handled -->
            <!-- This will happen if the elements of the TreeView are clicked -->
            <Setter Property="SanitizeIncompleteTouchOrMouseEvents" Value="True"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type local:ClassInfo}">
                            <Expander x:Name="Expander"  IsExpanded="{Binding ShowDetails}" Header="{Binding}" HeaderTemplate="{StaticResource {x:Type local:ClassInfo}}">
                                <TreeView x:Name="TreeView" ItemsSource="{Binding Sections}" ItemTemplate="{StaticResource {x:Type local:FeatureSection}}" BorderThickness="0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    			    <TreeView.Resources>
                    				    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource UMLTreeViewItemStyle}"></Style>
                    			    </TreeView.Resources>
                    		    </TreeView>
                    	    </Expander>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="ywpf:NodeControl">
                       <Border BorderBrush="Black" BorderThickness="1" CornerRadius="5" Padding="0">
    						<Border.Background>
    							<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
    								<GradientStop Color="#ffd4dcef" Offset="0" />
    								<GradientStop Color="White" Offset="1" />
    							</LinearGradientBrush>
    						</Border.Background>
                            <Grid>
                                <ContentPresenter />
                                 <!-- Create transparent areas to make hits tunnel through to the UIElement. This makes sure the node is hittable. -->
                                <Rectangle Stroke="Transparent" Fill="Transparent" VerticalAlignment="Top" Height="35" HorizontalAlignment="Stretch" Margin="25,0,0,0"/>
                                <Border BorderBrush="Transparent" BorderThickness="5,3,10,3"/>
                            </Grid>
                        </Border>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    </Window.Resources>
    <HeaderedContentControl Style="{StaticResource DemoStyle}">
        <HeaderedContentControl.Header>
            <RichTextBox BorderThickness="0" IsReadOnly="True">
                <FlowDocument>
                    <Paragraph>
                        This demo shows how to create a simple class diagram editor similar to the one 
                        bundled with Visual Studio. The demo does not allow to edit the UML features displayed 
                        in a node, but you will be able to toggle visibility of feature sections by clicking 
                        icons displayed inside a node.
                    </Paragraph>
                    <Paragraph Style="{StaticResource HtmlH2}">
                        Things to Try
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>Create new nodes in the canvas.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Expand the detailed node view by clicking on the open/close icon.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Expand/collapse each subsection with the plus/minus icon.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Try clipboard operations and observe how the backing data is treated correctly.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Try loading and saving the graph and take a note on the automatic serialization of the model data in the GraphML.</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Try to move or resize a selected node. Note the various constraints for these
                                actions.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Note that node label editing is disabled explicitly.
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </RichTextBox>
        </HeaderedContentControl.Header>
        <DockPanel>
            <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
                <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" Height="Auto" Name="toolBar">
                    <Button Command="Open" CommandTarget="{Binding ElementName=graphControl}" />
                    <Button Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}" />
                    <Separator />
                    <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                    <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                    <Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}" />
                </ToolBar>
            </ToolBarTray>
            <ywpf:GraphControl Width="Auto" Name="graphControl" FileOperationsEnabled="True"/>
        </DockPanel>
    </HeaderedContentControl>
</Window>
