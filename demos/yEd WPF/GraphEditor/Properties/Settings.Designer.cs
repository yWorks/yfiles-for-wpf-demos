/****************************************************************************
 ** 
 ** This demo file is part of yFiles WPF 3.5.
 ** Copyright (c) 2000-2022 by yWorks GmbH, Vor dem Kreuzberg 28,
 ** 72070 Tuebingen, Germany. All rights reserved.
 ** 
 ** yFiles demo files exhibit yFiles WPF functionalities. Any redistribution
 ** of demo files in source code or binary form, with or without
 ** modification, is not permitted.
 ** 
 ** Owners of a valid software license for a yFiles WPF version that this
 ** demo is shipped with are allowed to use the demo source code as basis
 ** for their own yFiles WPF powered applications. Use of such programs is
 ** governed by the rights and conditions as set out in the yFiles WPF
 ** license agreement.
 ** 
 ** THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED
 ** WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 ** MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN
 ** NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 ** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 ** TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 ** PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 ** LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 ** NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 ** SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 ** 
 ***************************************************************************/

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Demo.yFiles.GraphEditor.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.2.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastOpenFile {
            get {
                return ((string)(this["LastOpenFile"]));
            }
            set {
                this["LastOpenFile"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection MruFiles {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["MruFiles"]));
            }
            set {
                this["MruFiles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0,0")]
        public global::System.Windows.Point LastLocation {
            get {
                return ((global::System.Windows.Point)(this["LastLocation"]));
            }
            set {
                this["LastLocation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::System.Windows.WindowState LastState {
            get {
                return ((global::System.Windows.WindowState)(this["LastState"]));
            }
            set {
                this["LastState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowOverviewState {
            get {
                return ((bool)(this["ShowOverviewState"]));
            }
            set {
                this["ShowOverviewState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowStructureViewState {
            get {
                return ((bool)(this["ShowStructureViewState"]));
            }
            set {
                this["ShowStructureViewState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowPropertyViewState {
            get {
                return ((bool)(this["ShowPropertyViewState"]));
            }
            set {
                this["ShowPropertyViewState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool UpgradeSettings {
            get {
                return ((bool)(this["UpgradeSettings"]));
            }
            set {
                this["UpgradeSettings"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Xml.XmlDocument LayoutModuleState {
            get {
                return ((global::System.Xml.XmlDocument)(this["LayoutModuleState"]));
            }
            set {
                this["LayoutModuleState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AutoAdjustContentRectangle {
            get {
                return ((bool)(this["AutoAdjustContentRectangle"]));
            }
            set {
                this["AutoAdjustContentRectangle"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AutomaticallyRemoveEmptyLabels {
            get {
                return ((bool)(this["AutomaticallyRemoveEmptyLabels"]));
            }
            set {
                this["AutomaticallyRemoveEmptyLabels"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool GridEnabled {
            get {
                return ((bool)(this["GridEnabled"]));
            }
            set {
                this["GridEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("5")]
        public int GridWidth {
            get {
                return ((int)(this["GridWidth"]));
            }
            set {
                this["GridWidth"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50")]
        public int UndoSize {
            get {
                return ((int)(this["UndoSize"]));
            }
            set {
                this["UndoSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3")]
        public double HitTestRadius {
            get {
                return ((double)(this["HitTestRadius"]));
            }
            set {
                this["HitTestRadius"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1024,768")]
        public global::System.Windows.Size MainSize {
            get {
                return ((global::System.Windows.Size)(this["MainSize"]));
            }
            set {
                this["MainSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<graphml xmlns:y=\"http://www.yworks.com/" +
            "xml/graphml\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLoc" +
            "ation=\"http://graphml.graphdrawing.org/xmlns/graphml http://www.yworks.com/xml/s" +
            "chema/graphml.net/1.0/ygraphml.xsd \" version=\"1.2\" xmlns=\"http://graphml.graphdr" +
            "awing.org/xmlns/graphml\">\r\n  <key id=\"d0\" for=\"node\" attr.name=\"labels\" attr.typ" +
            "e=\"complex\" />\r\n  <key id=\"d1\" for=\"node\" attr.name=\"geometry\" attr.type=\"comple" +
            "x\" />\r\n  <key id=\"d2\" for=\"node\" attr.name=\"style\" attr.type=\"complex\" />\r\n  <ke" +
            "y id=\"d3\" for=\"edge\" attr.name=\"labels\" attr.type=\"complex\" />\r\n  <key id=\"d4\" f" +
            "or=\"edge\" attr.name=\"geometry\" attr.type=\"complex\" />\r\n  <key id=\"d5\" for=\"edge\"" +
            " attr.name=\"style\" attr.type=\"complex\" />\r\n  <key id=\"d6\" for=\"graph\" attr.name=" +
            "\"graphSettings\" attr.type=\"complex\" />\r\n  <key id=\"d7\" for=\"graph\" attr.name=\"cu" +
            "stomSettings\" attr.type=\"complex\" />\r\n  <key id=\"d8\" for=\"graph\" attr.name=\"shar" +
            "edData\" attr.type=\"complex\" />\r\n  <key id=\"d9\" for=\"port\" attr.name=\"geometry\" a" +
            "ttr.type=\"complex\">\r\n    <default>\r\n      <y:Geometry x=\"0\" y=\"0\" />\r\n    </defa" +
            "ult>\r\n  </key>\r\n  <key id=\"d10\" for=\"port\" attr.name=\"style\" attr.type=\"complex\"" +
            " />\r\n  <graph id=\"G\" edgedefault=\"directed\">\r\n    <data key=\"d8\">\r\n      <y:Shar" +
            "edData>\r\n        <y:Font family=\"Microsoft Sans Serif\" points=\"10\" style=\"Regula" +
            "r\" id=\"1\" />\r\n      </y:SharedData>\r\n    </data>\r\n    <data key=\"d7\">\r\n      <y:" +
            "MyDefaultSettings>\r\n        <!--Specialized Group Node settings-->\r\n        <!--" +
            "Default Styles-->\r\n        <y:DefaultGroupNodeLabelStyle>\r\n          <y:ISimpleL" +
            "abelStyle autoFlip=\"true\" clipText=\"true\">\r\n            <y:StringFormat alignmen" +
            "t=\"Far\" />\r\n            <y:Font refid=\"1\" />\r\n            <y:Brush name=\"SolidBr" +
            "ush\" color=\"Black\" />\r\n          </y:ISimpleLabelStyle>\r\n        </y:DefaultGrou" +
            "pNodeLabelStyle>\r\n        <!--Label models and parameters-->\r\n        <y:Default" +
            "GroupNodeLabelModelParameter>\r\n          <y:InteriorStretchLabelModel position=\"" +
            "North\">\r\n            <y:ModelState type=\"InteriorStretchLabelModel\">\r\n          " +
            "    <y:Insets left=\"0\" right=\"0\" top=\"0\" bottom=\"0\" />\r\n            </y:ModelSta" +
            "te>\r\n          </y:InteriorStretchLabelModel>\r\n        </y:DefaultGroupNodeLabel" +
            "ModelParameter>\r\n      </y:MyDefaultSettings>\r\n    </data>\r\n    <data key=\"d6\">\r" +
            "\n      <y:GraphSettings>\r\n        <!--Boolean flags-->\r\n        <y:Flags autoAdj" +
            "ustPreferredLabelSize=\"true\" autoCleanupPorts=\"true\" shareDefaultEdgeLayoutParam" +
            "eter=\"false\" shareDefaultEdgeLabelStyleInstance=\"false\" shareDefaultEdgeStyleIns" +
            "tance=\"false\" shareDefaultNodeLayoutParameter=\"false\" shareDefaultNodeLabelStyle" +
            "Instance=\"false\" shareDefaultNodeStyleInstance=\"false\" shareDefaultPortStyleInst" +
            "ance=\"false\" usePortCandidateProviders=\"false\" />\r\n        <!--Default Styles-->" +
            "\r\n        <y:DefaultEdgeStyle>\r\n          <y:IPolylineEdgeStyle>\r\n            <y" +
            ":Pen name=\"SolidColor\" color=\"#FF000000\" width=\"1\" />\r\n            <y:SourceArro" +
            "w>\r\n              <y:DefaultArrow type=\"None\" />\r\n            </y:SourceArrow>\r\n" +
            "            <y:TargetArrow>\r\n              <y:DefaultArrow type=\"Default\" cropLe" +
            "ngth=\"0\" scale=\"1\">\r\n                <y:Brush name=\"SolidBrush\" color=\"Black\" />" +
            "\r\n              </y:DefaultArrow>\r\n            </y:TargetArrow>\r\n          </y:I" +
            "PolylineEdgeStyle>\r\n        </y:DefaultEdgeStyle>\r\n        <y:DefaultNodeStyle>\r" +
            "\n          <y:IBevelNodeStyle color=\"DarkOrange\" radius=\"5\" inset=\"2\" />\r\n      " +
            "  </y:DefaultNodeStyle>\r\n        <y:DefaultPortStyle />\r\n        <y:DefaultEdgeL" +
            "abelStyle>\r\n          <y:ISimpleLabelStyle autoFlip=\"true\" clipText=\"true\">\r\n   " +
            "         <y:Font refid=\"1\" />\r\n            <y:Brush name=\"SolidBrush\" color=\"Bla" +
            "ck\" />\r\n          </y:ISimpleLabelStyle>\r\n        </y:DefaultEdgeLabelStyle>\r\n  " +
            "      <y:DefaultNodeLabelStyle>\r\n          <y:ISimpleLabelStyle autoFlip=\"true\" " +
            "clipText=\"true\">\r\n            <y:Font refid=\"1\" />\r\n            <y:Brush name=\"S" +
            "olidBrush\" color=\"Black\" />\r\n          </y:ISimpleLabelStyle>\r\n        </y:Defau" +
            "ltNodeLabelStyle>\r\n        <!--Label models and parameters-->\r\n        <y:Defaul" +
            "tEdgeLabelModelParameter>\r\n          <y:SliderEdgeLabelModel index=\"1\" ratio=\"0\"" +
            ">\r\n            <y:ModelState type=\"SliderEdgeLabelModel\" distance=\"0\" angle=\"0\" " +
            "edgeRelativeDistance=\"true\" />\r\n          </y:SliderEdgeLabelModel>\r\n        </y" +
            ":DefaultEdgeLabelModelParameter>\r\n        <y:DefaultNodeLabelModelParameter>\r\n  " +
            "        <y:InteriorLabelModel position=\"Center\">\r\n            <y:ModelState type" +
            "=\"InteriorLabelModel\">\r\n              <y:Insets left=\"0\" right=\"0\" top=\"0\" botto" +
            "m=\"0\" />\r\n            </y:ModelState>\r\n          </y:InteriorLabelModel>\r\n      " +
            "  </y:DefaultNodeLabelModelParameter>\r\n        <y:DefaultGroupNodeStyle>\r\n      " +
            "    <y:IPanelNodeStyle color=\"#FFCFE2F8\" labelInsetsColor=\"#FFCFE2F8\">\r\n        " +
            "    <y:InsetsRectangle x=\"5\" y=\"5\" width=\"5\" height=\"5\" />\r\n          </y:IPanel" +
            "NodeStyle>\r\n        </y:DefaultGroupNodeStyle>\r\n        <!--Misc settings-->\r\n  " +
            "      <y:DefaultNodeSize width=\"50\" height=\"30\" />\r\n      </y:GraphSettings>\r\n  " +
            "  </data>\r\n  </graph>\r\n</graphml>")]
        public global::System.Xml.XmlDocument DefaultGraphSettings {
            get {
                return ((global::System.Xml.XmlDocument)(this["DefaultGraphSettings"]));
            }
            set {
                this["DefaultGraphSettings"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool GridVisible {
            get {
                return ((bool)(this["GridVisible"]));
            }
            set {
                this["GridVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool SnappingEnabled {
            get {
                return ((bool)(this["SnappingEnabled"]));
            }
            set {
                this["SnappingEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool OrthogonalEdgesEnabled {
            get {
                return ((bool)(this["OrthogonalEdgesEnabled"]));
            }
            set {
                this["OrthogonalEdgesEnabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("GridPoints")]
        public global::yWorks.Controls.Input.GridSnapTypes GridSnapType {
            get {
                return ((global::yWorks.Controls.Input.GridSnapTypes)(this["GridSnapType"]));
            }
            set {
                this["GridSnapType"] = value;
            }
        }
    }
}
