<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.5.                           -->
<!-- Copyright (c) 2000-2022 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.Graph.BusinessModelAdapter.BusinessModelAdapterWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml" xmlns:BusinessModelAdapter="clr-namespace:Demo.yFiles.Graph.BusinessModelAdapter" Title="Demo.yFiles.Graph.BusinessModelAdapter" Height="850" Width="1280" Loaded="BusinessModelAdapterWindow_OnLoaded" Style="{StaticResource DemoWindow}">
    <Window.CommandBindings>
        <CommandBinding Command="BusinessModelAdapter:BusinessModelAdapterWindow.RemoveCustomerCommand" Executed="OnRemoveClicked" />
        <CommandBinding Command="BusinessModelAdapter:BusinessModelAdapterWindow.RemoveRelationCommand" Executed="OnRemoveRelatedClicked" />
    </Window.CommandBindings>

	<HeaderedContentControl Style="{StaticResource DemoStyle}">
		<HeaderedContentControl.Header>
			<RichTextBox BorderThickness="0" IsReadOnly="True">
				<FlowDocument FontFamily="Segoe UI" FontSize="12">
					<Paragraph>
						<Run>
							This demo shows how to write a simple adapter that adapts an existing observable business model to an
						</Run>
						<Run FontStyle="Italic" Text="IGraph " />
						<Run>
							that can be visualized and edited in a view.
						</Run>
					</Paragraph>
					<Paragraph Style="{StaticResource HtmlH2}">
						Things to Try
					</Paragraph>
					<List>
						<ListItem>
							<Paragraph>
								To create a new customer, edit the customer template, and click
								<Run FontWeight="Bold" Text="Insert New Customer" />
								. Alternatively, clicking on an empty location in the 
								graph view will also create a new customer.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								You can edit a customer's properties either in the Business Model view or in the Graph view simply by editing the text fields.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								You can create relations between two ore more customers by selecting them in the
								<Run FontWeight="Bold" Text="Customers" />
								list and clicking
								<Run FontWeight="Bold" Text="Relate Selected" />. Alternatively, you can create an edge between two nodes in the graph view.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								You can remove a customer by selecting them in the
								<Run FontWeight="Bold" Text="Customers" />
								list and clicking
								<Run FontWeight="Bold" Text="Remove Customer" />
								or just pressing
								<Run FontWeight="Bold" Text="Delete" />
								.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								Selecting a customer in the
								<Run FontWeight="Bold" Text="Customers" />
								list displays all related customers in the
								<Run FontWeight="Bold" Text="Related Customers" />
								list.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								You can remove one or more relations by selecting them in the
								<Run FontWeight="Bold" Text="Related Customers" />
								list and clicking
								<Run FontWeight="Bold" Text="Remove Relation" />
								.
							</Paragraph>
						</ListItem>
						<ListItem>
							<Paragraph>
								You can calculate a new layout by clicking the
								<Run FontWeight="Bold" Text="Arrange" />
								toolbar button.
							</Paragraph>
						</ListItem>
					</List>
				</FlowDocument>
			</RichTextBox>
		</HeaderedContentControl.Header>

		<DockPanel Grid.Column="0">
			<DockPanel DockPanel.Dock="Left">
				<HeaderedContentControl Header="BusinessModel" Style="{StaticResource HeaderedContentStyle}" BorderThickness="1,0,1,0">
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
						<HeaderedContentControl Header="Customers" Style="{StaticResource HeaderedContentStyle}"  BorderThickness="0,0,1,0">
							<DockPanel>
								<Button Content="Insert New Customer" Click="OnInsertClicked" DockPanel.Dock="Bottom" Margin="5,0,5,5" />
								<ContentPresenter Margin="5" Content="{DynamicResource DummyCustomer}" Width="Auto" ContentTemplate="{StaticResource CustomerTemplate}" DockPanel.Dock="Bottom" />
								<Button Content="Remove Customer" Click="OnRemoveClicked" DockPanel.Dock="Bottom" Margin="5,3,5,10" />
								<Button Content="Relate Selected" Click="OnRelateClicked" DockPanel.Dock="Bottom" Margin="5,3,5,0" />
								<ListView Name="customerList" Width="210" ItemsSource="{DynamicResource Customers}" ItemTemplate="{StaticResource CustomerTemplate}" BorderThickness="0">
									<ListView.InputBindings>
										<KeyBinding Gesture="Delete" Command="{x:Static BusinessModelAdapter:BusinessModelAdapterWindow.RemoveCustomerCommand}" />
									</ListView.InputBindings>
								</ListView>
							</DockPanel>
						</HeaderedContentControl>
						<HeaderedContentControl Header="Related Customers" Style="{StaticResource HeaderedContentStyle}">
							<DockPanel>
								<Button Content="Remove Relation" Click="OnRemoveRelatedClicked" DockPanel.Dock="Bottom" Margin="5,3,5,5" />
								<ListView Name="relatedCustomersList" Width="210" ItemsSource="{Binding ElementName=customerList, Path=SelectedItem.RelatedCustomers}" ItemTemplate="{StaticResource CustomerTemplate}" BorderThickness="0">
									<ListView.InputBindings>
										<KeyBinding Gesture="Delete" Command="{x:Static BusinessModelAdapter:BusinessModelAdapterWindow.RemoveRelationCommand}" />
									</ListView.InputBindings>
								</ListView>
							</DockPanel>
						</HeaderedContentControl>

					</StackPanel>
				</HeaderedContentControl>
			</DockPanel>
			<DockPanel Width="Auto" Height="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
                    <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" DockPanel.Dock="Top" Height="Auto">
                        <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                        <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}" />
                        <Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}" />
                        <Separator />
                        <Button HorizontalAlignment="Right" VerticalAlignment="Bottom" Click="OnArrangeClicked">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource LayoutIcon}" Margin="0,0,4,0"/>
                                <TextBlock>Arrange</TextBlock>
                            </StackPanel>
                        </Button>
                    </ToolBar>
                </ToolBarTray>
                <ywpf:GraphControl Name="graphControl" />
			</DockPanel>
		</DockPanel>
	</HeaderedContentControl>
</Window>
