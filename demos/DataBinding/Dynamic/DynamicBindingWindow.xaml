<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Demo.yFiles.DataBinding.Dynamic.DynamicBindingWindow" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:DynamicDataBinding="clr-namespace:Demo.yFiles.DataBinding.Dynamic"
        xmlns:ywpf="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
        Title="Binding to Dynamic Business Data"
        Width="1280" Height="850"
        Loaded="Window_Loaded"  Style="{StaticResource DemoWindow}">
    <Window.Resources>
        <!-- This is the initial business data. -->
        <DynamicDataBinding:CustomerRepository x:Key="customerRepository">
            <DynamicDataBinding:Customer CustomerName="Root Customer">
                <DynamicDataBinding:Customer CustomerName="Child Customer One"/>
                <DynamicDataBinding:Customer CustomerName="Child Customer Two"/>
            </DynamicDataBinding:Customer>
            <DynamicDataBinding:Customer CustomerName="Second Root Customer">
                <DynamicDataBinding:Customer CustomerName="Child Customer One"/>
                <DynamicDataBinding:Customer CustomerName="Child Customer Two"/>
                <DynamicDataBinding:Customer CustomerName="Child Customer Three"/>
                <DynamicDataBinding:Customer CustomerName="Child Customer Four"/>
                <DynamicDataBinding:Customer CustomerName="Child Customer Five">
                    <DynamicDataBinding:Customer CustomerName="Child Customer One"/>
                    <DynamicDataBinding:Customer CustomerName="Child Customer Two"/>
                    <DynamicDataBinding:Customer CustomerName="Child Customer Three"/>
                    <DynamicDataBinding:Customer CustomerName="Child Customer Four"/>
                </DynamicDataBinding:Customer>
            </DynamicDataBinding:Customer>
        </DynamicDataBinding:CustomerRepository>

        <!-- This is the style for the customer nodes. -->
    	<Style x:Key="CustomerTemplate" TargetType="ywpf:NodeControl">
    		<Setter Property="ContentTemplate">
    			<Setter.Value>
    				<DataTemplate>
    					<Border BorderBrush="#27401b" Background="#61a044" Padding="3" BorderThickness="1" CornerRadius="5">
    						<StackPanel Orientation="Vertical">
    							<TextBlock Text="{Binding Path=CustomerName}" MinWidth="20" MinHeight="20" Foreground="#27401b" />
    						</StackPanel>
    					</Border>
    				</DataTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

        <!-- This is a tree source which constructs a graph from the customer repository. -->
        <!-- Note that the tree source is configured to handle dynamic updates. -->
        <ywpf:TreeSource x:Key="treeSource"
                      NodesSource="{Binding Source={StaticResource customerRepository}, Path=Customers}"
                      ChildBinding="{Binding Path=RelatedCustomers}"
                      DynamicUpdates="true" NodeControlStyle="{StaticResource CustomerTemplate}">
            <ywpf:TreeSource.EdgeStyle>
                <ywpf:PolylineEdgeStyle TargetArrow="{x:Static ywpf:Arrows.Simple}" SmoothingLength="20"/>
            </ywpf:TreeSource.EdgeStyle>
        </ywpf:TreeSource>			
    </Window.Resources>
    <HeaderedContentControl Style="{StaticResource DemoStyle}">
        <HeaderedContentControl.Header>
            <RichTextBox BorderThickness="0" IsReadOnly="True">
                <FlowDocument>
                    <Paragraph>
                        <Run>This Demo shows how to use a</Run>
                        <Run FontStyle="Italic" Text="TreeSource"/>
                        <Run>bound to dynamic business data.</Run>
                    </Paragraph>
                    <Paragraph Style="{StaticResource HtmlH2}">
                        Things to Try
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>
                                Clicking a node selects the node. Alternatively, you can use the arrow keys to change
                                the selected node while the graph control has focus.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                Pressing the "Insert" key adds a new Customer business object, either as a new root node, if
                                there is no selected node or a child of the currently selected node.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                Pressing the "Delete" key removes the customer represented by the selected node and its
                                related customers.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>
                                Note that the changes to the business objects are directly reflected in the structure
                                of the graph.
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </RichTextBox>
        </HeaderedContentControl.Header>
        <DockPanel>
            <ToolBarTray Height="Auto" Name="toolBarTray" Width="Auto" DockPanel.Dock="Top">
                <ToolBar Width="{Binding ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToolBarTray}}}" DockPanel.Dock="Top" Height="30">
                    <Button Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                    <Button Command="{x:Static ywpf:GraphControl.FitGraphBoundsCommand}"  CommandTarget="{Binding ElementName=graphControl}"/>
                </ToolBar>
            </ToolBarTray>

            <!-- The graph control displays the graph which is constructed by the tree source. -->
            <ywpf:GraphControl x:Name="graphControl" Graph="{Binding Source={StaticResource treeSource}, Path=Graph}">
                <ywpf:GraphControl.InputMode>
                    <ywpf:GraphViewerInputMode x:Name="graphViewerInputMode"  ClickableItems="Node" FocusableItems="Node" SelectableItems="Node"
                                               MarqueeSelectableItems="None" ToolTipItems="None" ContextMenuItems="None"/>
                </ywpf:GraphControl.InputMode>
            </ywpf:GraphControl>
        </DockPanel>
    </HeaderedContentControl>
</Window>
