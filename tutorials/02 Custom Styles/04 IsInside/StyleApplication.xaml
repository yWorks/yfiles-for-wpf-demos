<!-- ************************************************************************ -->
<!-- This demo file is part of yFiles WPF 3.6.                           -->
<!-- Copyright (c) 2000-2024 by yWorks GmbH, Vor dem Kreuzberg 28,          -->
<!-- 72070 Tuebingen, Germany. All rights reserved.                           -->
<!--                                                                          -->
<!-- yFiles demo files exhibit yFiles WPF functionalities. Any redistribution  -->
<!-- of demo resource files, with or without modification, is not permitted.  -->
<!--                                                                          -->
<!-- Owners of a valid software license for a yFiles WPF version that this     -->
<!-- demo is shipped with are allowed to use the resource file as basis for   -->
<!-- their own yFiles WPF powered applications. Use of such programs is        -->
<!-- governed by the rights and conditions as set out in the yFiles WPF        -->
<!-- license agreement.                                                       -->
<!--                                                                          -->
<!-- THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESS OR IMPLIED           -->
<!-- WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF     -->
<!-- MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN  -->
<!-- NO EVENT SHALL yWorks BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,    -->
<!-- SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED -->
<!-- TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR   -->
<!-- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF   -->
<!-- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING     -->
<!-- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS       -->
<!-- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.             -->
<!--                                                                          -->
<!-- ************************************************************************ -->
<Window x:Class="Tutorial.CustomStyles.SimpleCustomStyleForm"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:y="http://www.yworks.com/xml/yfiles-wpf/3.0/xaml"
    Title="Style Tutorial 04: IsInside" Height="680" Width="950"
        Loaded="OnLoaded" >
    <HeaderedContentControl Style="{StaticResource DemoStyle}">
        <HeaderedContentControl.Header>
            <RichTextBox BorderThickness="0" IsReadOnly="True">
                <FlowDocument FontFamily="Segoe UI" FontSize="12">
                    <Paragraph>
                        <Run FontWeight="Bold">Description</Run>
                    </Paragraph>
                    <Paragraph>
                        This step shows how to override IsInside() and GetOutline() in NodeStyleBase&lt;TVisual&gt;.
                    </Paragraph>
                    <Paragraph>
                        <Run FontWeight="Bold">Things to Try</Run>
                    </Paragraph>
                    <List>
                        <ListItem>
                            <Paragraph>Take a look at IsInside() and GetOutline().
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Move an edge around a node. It follows the outline of the node.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Now comment in the first line in GetOutline() so the implementation 
                    in the base class is called and do the same thing again. Now the edge will follow a 
                    rectangle enclosing the node.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Select an incoming edge and drag its port outside the node. See how the behaviour 
                                of the edge changes when the port enters the node. That is an effect of the implementation of 
                                IsInside().
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Now comment in the first line in IsInside() so the implementation 
                    in the base class is called and do the same thing again. Now the enclosing rectangle is 
                                used for port behaviour calculation.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Please note that IsInside() as well as GetIntersection(), which isn't demonstrated here,
                                are just used to improve performance. If not implemented, GetOutline() will be used to calculate
                                exactly the same thing, with the difference that GetOutline() needs to build a GeneralPath first 
                                which is more expensive than an efficient implementation as shown in IsInside().
                            </Paragraph>
                        </ListItem>
                    </List>
                    <Paragraph>
                        <Run FontWeight="Bold">Left to Do</Run>
                    </Paragraph>
                    <List>
                        <ListItem>
                        	<Paragraph>
                        		Implement HitTest, so a node won't get selected when clicking 
                        		in the bounding box but not in the node itself (this works already 
                                in this step, but can be implemented explicitly for performance reasons).
                        	</Paragraph>
                        </ListItem>
                        <ListItem>
                        	<Paragraph>
                        		Implement GetBounds(), so the drop shadow will be 
                        		included in the bounds of the node.
                        	</Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Find a way to draw a well-performing drop shadow.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Draw edges from nodes to their labels.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Create a custom label style.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Create a custom edge style.
                            </Paragraph>
                        </ListItem>
                        <ListItem>
                            <Paragraph>Create a custom port style for nodes.
                            </Paragraph>
                        </ListItem>
                    </List>
                </FlowDocument>
            </RichTextBox>
        </HeaderedContentControl.Header>
        <DockPanel Grid.Column="2">
        <Menu Name="menu" DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Open" Command="Open" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Header="Save" Command="SaveAs" CommandTarget="{Binding ElementName=graphControl}"/>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Zoom In" Command="IncreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Header="Zoom Out" Command="DecreaseZoom" CommandTarget="{Binding ElementName=graphControl}"/>
                <MenuItem Header="Fit Content" Command="{x:Static y:GraphControl.FitGraphBoundsCommand}" CommandTarget="{Binding ElementName=graphControl}"/>
            </MenuItem>
        </Menu>
        <y:GraphControl Name="graphControl" FileOperationsEnabled="True"/>
    </DockPanel>
    </HeaderedContentControl>
</Window>
